/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ps.customer.event.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Business extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4846363348286703164L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Business\",\"namespace\":\"ps.customer.event.avro\",\"fields\":[{\"name\":\"businessCategory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"billIdentification\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"businessCategorySecondary\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"checkoutPhone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customerServiceEmail\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nickname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"directAcquirer\",\"type\":\"boolean\",\"default\":false},{\"name\":\"urls\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"URL\",\"fields\":[{\"name\":\"label\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"url\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Business> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Business> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Business> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Business> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Business> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Business to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Business from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Business instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Business fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence businessCategory;
  private java.lang.CharSequence billIdentification;
  private java.lang.CharSequence businessCategorySecondary;
  private java.lang.CharSequence checkoutPhone;
  private java.lang.CharSequence customerServiceEmail;
  private java.lang.CharSequence nickname;
  private boolean directAcquirer;
  private java.util.List<ps.customer.event.avro.URL> urls;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Business() {}

  /**
   * All-args constructor.
   * @param businessCategory The new value for businessCategory
   * @param billIdentification The new value for billIdentification
   * @param businessCategorySecondary The new value for businessCategorySecondary
   * @param checkoutPhone The new value for checkoutPhone
   * @param customerServiceEmail The new value for customerServiceEmail
   * @param nickname The new value for nickname
   * @param directAcquirer The new value for directAcquirer
   * @param urls The new value for urls
   */
  public Business(java.lang.CharSequence businessCategory, java.lang.CharSequence billIdentification, java.lang.CharSequence businessCategorySecondary, java.lang.CharSequence checkoutPhone, java.lang.CharSequence customerServiceEmail, java.lang.CharSequence nickname, java.lang.Boolean directAcquirer, java.util.List<ps.customer.event.avro.URL> urls) {
    this.businessCategory = businessCategory;
    this.billIdentification = billIdentification;
    this.businessCategorySecondary = businessCategorySecondary;
    this.checkoutPhone = checkoutPhone;
    this.customerServiceEmail = customerServiceEmail;
    this.nickname = nickname;
    this.directAcquirer = directAcquirer;
    this.urls = urls;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return businessCategory;
    case 1: return billIdentification;
    case 2: return businessCategorySecondary;
    case 3: return checkoutPhone;
    case 4: return customerServiceEmail;
    case 5: return nickname;
    case 6: return directAcquirer;
    case 7: return urls;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: businessCategory = (java.lang.CharSequence)value$; break;
    case 1: billIdentification = (java.lang.CharSequence)value$; break;
    case 2: businessCategorySecondary = (java.lang.CharSequence)value$; break;
    case 3: checkoutPhone = (java.lang.CharSequence)value$; break;
    case 4: customerServiceEmail = (java.lang.CharSequence)value$; break;
    case 5: nickname = (java.lang.CharSequence)value$; break;
    case 6: directAcquirer = (java.lang.Boolean)value$; break;
    case 7: urls = (java.util.List<ps.customer.event.avro.URL>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'businessCategory' field.
   * @return The value of the 'businessCategory' field.
   */
  public java.lang.CharSequence getBusinessCategory() {
    return businessCategory;
  }


  /**
   * Sets the value of the 'businessCategory' field.
   * @param value the value to set.
   */
  public void setBusinessCategory(java.lang.CharSequence value) {
    this.businessCategory = value;
  }

  /**
   * Gets the value of the 'billIdentification' field.
   * @return The value of the 'billIdentification' field.
   */
  public java.lang.CharSequence getBillIdentification() {
    return billIdentification;
  }


  /**
   * Sets the value of the 'billIdentification' field.
   * @param value the value to set.
   */
  public void setBillIdentification(java.lang.CharSequence value) {
    this.billIdentification = value;
  }

  /**
   * Gets the value of the 'businessCategorySecondary' field.
   * @return The value of the 'businessCategorySecondary' field.
   */
  public java.lang.CharSequence getBusinessCategorySecondary() {
    return businessCategorySecondary;
  }


  /**
   * Sets the value of the 'businessCategorySecondary' field.
   * @param value the value to set.
   */
  public void setBusinessCategorySecondary(java.lang.CharSequence value) {
    this.businessCategorySecondary = value;
  }

  /**
   * Gets the value of the 'checkoutPhone' field.
   * @return The value of the 'checkoutPhone' field.
   */
  public java.lang.CharSequence getCheckoutPhone() {
    return checkoutPhone;
  }


  /**
   * Sets the value of the 'checkoutPhone' field.
   * @param value the value to set.
   */
  public void setCheckoutPhone(java.lang.CharSequence value) {
    this.checkoutPhone = value;
  }

  /**
   * Gets the value of the 'customerServiceEmail' field.
   * @return The value of the 'customerServiceEmail' field.
   */
  public java.lang.CharSequence getCustomerServiceEmail() {
    return customerServiceEmail;
  }


  /**
   * Sets the value of the 'customerServiceEmail' field.
   * @param value the value to set.
   */
  public void setCustomerServiceEmail(java.lang.CharSequence value) {
    this.customerServiceEmail = value;
  }

  /**
   * Gets the value of the 'nickname' field.
   * @return The value of the 'nickname' field.
   */
  public java.lang.CharSequence getNickname() {
    return nickname;
  }


  /**
   * Sets the value of the 'nickname' field.
   * @param value the value to set.
   */
  public void setNickname(java.lang.CharSequence value) {
    this.nickname = value;
  }

  /**
   * Gets the value of the 'directAcquirer' field.
   * @return The value of the 'directAcquirer' field.
   */
  public boolean getDirectAcquirer() {
    return directAcquirer;
  }


  /**
   * Sets the value of the 'directAcquirer' field.
   * @param value the value to set.
   */
  public void setDirectAcquirer(boolean value) {
    this.directAcquirer = value;
  }

  /**
   * Gets the value of the 'urls' field.
   * @return The value of the 'urls' field.
   */
  public java.util.List<ps.customer.event.avro.URL> getUrls() {
    return urls;
  }


  /**
   * Sets the value of the 'urls' field.
   * @param value the value to set.
   */
  public void setUrls(java.util.List<ps.customer.event.avro.URL> value) {
    this.urls = value;
  }

  /**
   * Creates a new Business RecordBuilder.
   * @return A new Business RecordBuilder
   */
  public static ps.customer.event.avro.Business.Builder newBuilder() {
    return new ps.customer.event.avro.Business.Builder();
  }

  /**
   * Creates a new Business RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Business RecordBuilder
   */
  public static ps.customer.event.avro.Business.Builder newBuilder(ps.customer.event.avro.Business.Builder other) {
    if (other == null) {
      return new ps.customer.event.avro.Business.Builder();
    } else {
      return new ps.customer.event.avro.Business.Builder(other);
    }
  }

  /**
   * Creates a new Business RecordBuilder by copying an existing Business instance.
   * @param other The existing instance to copy.
   * @return A new Business RecordBuilder
   */
  public static ps.customer.event.avro.Business.Builder newBuilder(ps.customer.event.avro.Business other) {
    if (other == null) {
      return new ps.customer.event.avro.Business.Builder();
    } else {
      return new ps.customer.event.avro.Business.Builder(other);
    }
  }

  /**
   * RecordBuilder for Business instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Business>
    implements org.apache.avro.data.RecordBuilder<Business> {

    private java.lang.CharSequence businessCategory;
    private java.lang.CharSequence billIdentification;
    private java.lang.CharSequence businessCategorySecondary;
    private java.lang.CharSequence checkoutPhone;
    private java.lang.CharSequence customerServiceEmail;
    private java.lang.CharSequence nickname;
    private boolean directAcquirer;
    private java.util.List<ps.customer.event.avro.URL> urls;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ps.customer.event.avro.Business.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.businessCategory)) {
        this.businessCategory = data().deepCopy(fields()[0].schema(), other.businessCategory);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.billIdentification)) {
        this.billIdentification = data().deepCopy(fields()[1].schema(), other.billIdentification);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.businessCategorySecondary)) {
        this.businessCategorySecondary = data().deepCopy(fields()[2].schema(), other.businessCategorySecondary);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.checkoutPhone)) {
        this.checkoutPhone = data().deepCopy(fields()[3].schema(), other.checkoutPhone);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.customerServiceEmail)) {
        this.customerServiceEmail = data().deepCopy(fields()[4].schema(), other.customerServiceEmail);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.nickname)) {
        this.nickname = data().deepCopy(fields()[5].schema(), other.nickname);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.directAcquirer)) {
        this.directAcquirer = data().deepCopy(fields()[6].schema(), other.directAcquirer);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.urls)) {
        this.urls = data().deepCopy(fields()[7].schema(), other.urls);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing Business instance
     * @param other The existing instance to copy.
     */
    private Builder(ps.customer.event.avro.Business other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.businessCategory)) {
        this.businessCategory = data().deepCopy(fields()[0].schema(), other.businessCategory);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.billIdentification)) {
        this.billIdentification = data().deepCopy(fields()[1].schema(), other.billIdentification);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.businessCategorySecondary)) {
        this.businessCategorySecondary = data().deepCopy(fields()[2].schema(), other.businessCategorySecondary);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.checkoutPhone)) {
        this.checkoutPhone = data().deepCopy(fields()[3].schema(), other.checkoutPhone);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.customerServiceEmail)) {
        this.customerServiceEmail = data().deepCopy(fields()[4].schema(), other.customerServiceEmail);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.nickname)) {
        this.nickname = data().deepCopy(fields()[5].schema(), other.nickname);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.directAcquirer)) {
        this.directAcquirer = data().deepCopy(fields()[6].schema(), other.directAcquirer);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.urls)) {
        this.urls = data().deepCopy(fields()[7].schema(), other.urls);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'businessCategory' field.
      * @return The value.
      */
    public java.lang.CharSequence getBusinessCategory() {
      return businessCategory;
    }


    /**
      * Sets the value of the 'businessCategory' field.
      * @param value The value of 'businessCategory'.
      * @return This builder.
      */
    public ps.customer.event.avro.Business.Builder setBusinessCategory(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.businessCategory = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'businessCategory' field has been set.
      * @return True if the 'businessCategory' field has been set, false otherwise.
      */
    public boolean hasBusinessCategory() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'businessCategory' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Business.Builder clearBusinessCategory() {
      businessCategory = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'billIdentification' field.
      * @return The value.
      */
    public java.lang.CharSequence getBillIdentification() {
      return billIdentification;
    }


    /**
      * Sets the value of the 'billIdentification' field.
      * @param value The value of 'billIdentification'.
      * @return This builder.
      */
    public ps.customer.event.avro.Business.Builder setBillIdentification(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.billIdentification = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'billIdentification' field has been set.
      * @return True if the 'billIdentification' field has been set, false otherwise.
      */
    public boolean hasBillIdentification() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'billIdentification' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Business.Builder clearBillIdentification() {
      billIdentification = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'businessCategorySecondary' field.
      * @return The value.
      */
    public java.lang.CharSequence getBusinessCategorySecondary() {
      return businessCategorySecondary;
    }


    /**
      * Sets the value of the 'businessCategorySecondary' field.
      * @param value The value of 'businessCategorySecondary'.
      * @return This builder.
      */
    public ps.customer.event.avro.Business.Builder setBusinessCategorySecondary(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.businessCategorySecondary = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'businessCategorySecondary' field has been set.
      * @return True if the 'businessCategorySecondary' field has been set, false otherwise.
      */
    public boolean hasBusinessCategorySecondary() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'businessCategorySecondary' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Business.Builder clearBusinessCategorySecondary() {
      businessCategorySecondary = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'checkoutPhone' field.
      * @return The value.
      */
    public java.lang.CharSequence getCheckoutPhone() {
      return checkoutPhone;
    }


    /**
      * Sets the value of the 'checkoutPhone' field.
      * @param value The value of 'checkoutPhone'.
      * @return This builder.
      */
    public ps.customer.event.avro.Business.Builder setCheckoutPhone(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.checkoutPhone = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'checkoutPhone' field has been set.
      * @return True if the 'checkoutPhone' field has been set, false otherwise.
      */
    public boolean hasCheckoutPhone() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'checkoutPhone' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Business.Builder clearCheckoutPhone() {
      checkoutPhone = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerServiceEmail' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomerServiceEmail() {
      return customerServiceEmail;
    }


    /**
      * Sets the value of the 'customerServiceEmail' field.
      * @param value The value of 'customerServiceEmail'.
      * @return This builder.
      */
    public ps.customer.event.avro.Business.Builder setCustomerServiceEmail(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.customerServiceEmail = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'customerServiceEmail' field has been set.
      * @return True if the 'customerServiceEmail' field has been set, false otherwise.
      */
    public boolean hasCustomerServiceEmail() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'customerServiceEmail' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Business.Builder clearCustomerServiceEmail() {
      customerServiceEmail = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'nickname' field.
      * @return The value.
      */
    public java.lang.CharSequence getNickname() {
      return nickname;
    }


    /**
      * Sets the value of the 'nickname' field.
      * @param value The value of 'nickname'.
      * @return This builder.
      */
    public ps.customer.event.avro.Business.Builder setNickname(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.nickname = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'nickname' field has been set.
      * @return True if the 'nickname' field has been set, false otherwise.
      */
    public boolean hasNickname() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'nickname' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Business.Builder clearNickname() {
      nickname = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'directAcquirer' field.
      * @return The value.
      */
    public boolean getDirectAcquirer() {
      return directAcquirer;
    }


    /**
      * Sets the value of the 'directAcquirer' field.
      * @param value The value of 'directAcquirer'.
      * @return This builder.
      */
    public ps.customer.event.avro.Business.Builder setDirectAcquirer(boolean value) {
      validate(fields()[6], value);
      this.directAcquirer = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'directAcquirer' field has been set.
      * @return True if the 'directAcquirer' field has been set, false otherwise.
      */
    public boolean hasDirectAcquirer() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'directAcquirer' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Business.Builder clearDirectAcquirer() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'urls' field.
      * @return The value.
      */
    public java.util.List<ps.customer.event.avro.URL> getUrls() {
      return urls;
    }


    /**
      * Sets the value of the 'urls' field.
      * @param value The value of 'urls'.
      * @return This builder.
      */
    public ps.customer.event.avro.Business.Builder setUrls(java.util.List<ps.customer.event.avro.URL> value) {
      validate(fields()[7], value);
      this.urls = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'urls' field has been set.
      * @return True if the 'urls' field has been set, false otherwise.
      */
    public boolean hasUrls() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'urls' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Business.Builder clearUrls() {
      urls = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Business build() {
      try {
        Business record = new Business();
        record.businessCategory = fieldSetFlags()[0] ? this.businessCategory : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.billIdentification = fieldSetFlags()[1] ? this.billIdentification : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.businessCategorySecondary = fieldSetFlags()[2] ? this.businessCategorySecondary : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.checkoutPhone = fieldSetFlags()[3] ? this.checkoutPhone : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.customerServiceEmail = fieldSetFlags()[4] ? this.customerServiceEmail : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.nickname = fieldSetFlags()[5] ? this.nickname : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.directAcquirer = fieldSetFlags()[6] ? this.directAcquirer : (java.lang.Boolean) defaultValue(fields()[6]);
        record.urls = fieldSetFlags()[7] ? this.urls : (java.util.List<ps.customer.event.avro.URL>) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Business>
    WRITER$ = (org.apache.avro.io.DatumWriter<Business>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Business>
    READER$ = (org.apache.avro.io.DatumReader<Business>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.businessCategory == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.businessCategory);
    }

    if (this.billIdentification == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.billIdentification);
    }

    if (this.businessCategorySecondary == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.businessCategorySecondary);
    }

    if (this.checkoutPhone == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.checkoutPhone);
    }

    if (this.customerServiceEmail == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.customerServiceEmail);
    }

    if (this.nickname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.nickname);
    }

    out.writeBoolean(this.directAcquirer);

    if (this.urls == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.urls.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (ps.customer.event.avro.URL e0: this.urls) {
        actualSize0++;
        out.startItem();
        e0.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.businessCategory = null;
      } else {
        this.businessCategory = in.readString(this.businessCategory instanceof Utf8 ? (Utf8)this.businessCategory : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.billIdentification = null;
      } else {
        this.billIdentification = in.readString(this.billIdentification instanceof Utf8 ? (Utf8)this.billIdentification : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.businessCategorySecondary = null;
      } else {
        this.businessCategorySecondary = in.readString(this.businessCategorySecondary instanceof Utf8 ? (Utf8)this.businessCategorySecondary : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.checkoutPhone = null;
      } else {
        this.checkoutPhone = in.readString(this.checkoutPhone instanceof Utf8 ? (Utf8)this.checkoutPhone : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.customerServiceEmail = null;
      } else {
        this.customerServiceEmail = in.readString(this.customerServiceEmail instanceof Utf8 ? (Utf8)this.customerServiceEmail : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.nickname = null;
      } else {
        this.nickname = in.readString(this.nickname instanceof Utf8 ? (Utf8)this.nickname : null);
      }

      this.directAcquirer = in.readBoolean();

      if (in.readIndex() != 1) {
        in.readNull();
        this.urls = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<ps.customer.event.avro.URL> a0 = this.urls;
        if (a0 == null) {
          a0 = new SpecificData.Array<ps.customer.event.avro.URL>((int)size0, SCHEMA$.getField("urls").schema().getTypes().get(1));
          this.urls = a0;
        } else a0.clear();
        SpecificData.Array<ps.customer.event.avro.URL> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<ps.customer.event.avro.URL>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            ps.customer.event.avro.URL e0 = (ga0 != null ? ga0.peek() : null);
            if (e0 == null) {
              e0 = new ps.customer.event.avro.URL();
            }
            e0.customDecode(in);
            a0.add(e0);
          }
        }
      }

    } else {
      for (int i = 0; i < 8; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.businessCategory = null;
          } else {
            this.businessCategory = in.readString(this.businessCategory instanceof Utf8 ? (Utf8)this.businessCategory : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.billIdentification = null;
          } else {
            this.billIdentification = in.readString(this.billIdentification instanceof Utf8 ? (Utf8)this.billIdentification : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.businessCategorySecondary = null;
          } else {
            this.businessCategorySecondary = in.readString(this.businessCategorySecondary instanceof Utf8 ? (Utf8)this.businessCategorySecondary : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.checkoutPhone = null;
          } else {
            this.checkoutPhone = in.readString(this.checkoutPhone instanceof Utf8 ? (Utf8)this.checkoutPhone : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.customerServiceEmail = null;
          } else {
            this.customerServiceEmail = in.readString(this.customerServiceEmail instanceof Utf8 ? (Utf8)this.customerServiceEmail : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.nickname = null;
          } else {
            this.nickname = in.readString(this.nickname instanceof Utf8 ? (Utf8)this.nickname : null);
          }
          break;

        case 6:
          this.directAcquirer = in.readBoolean();
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.urls = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<ps.customer.event.avro.URL> a0 = this.urls;
            if (a0 == null) {
              a0 = new SpecificData.Array<ps.customer.event.avro.URL>((int)size0, SCHEMA$.getField("urls").schema().getTypes().get(1));
              this.urls = a0;
            } else a0.clear();
            SpecificData.Array<ps.customer.event.avro.URL> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<ps.customer.event.avro.URL>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                ps.customer.event.avro.URL e0 = (ga0 != null ? ga0.peek() : null);
                if (e0 == null) {
                  e0 = new ps.customer.event.avro.URL();
                }
                e0.customDecode(in);
                a0.add(e0);
              }
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










