/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ps.customer.event.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Partner extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2112648162620209334L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Partner\",\"namespace\":\"ps.customer.event.avro\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"bornDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"logicalType\":\"timestamp-micros\"},{\"name\":\"motherName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"document\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"partnershipStartDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"logicalType\":\"timestamp-micros\"},{\"name\":\"partnershipEndDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"logicalType\":\"timestamp-micros\"},{\"name\":\"ppe\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"owner\",\"type\":\"boolean\",\"default\":false},{\"name\":\"ofac\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Partner> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Partner> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Partner> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Partner> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Partner> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Partner to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Partner from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Partner instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Partner fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence name;
  private java.lang.CharSequence bornDate;
  private java.lang.CharSequence motherName;
  private java.lang.CharSequence document;
  private java.lang.CharSequence partnershipStartDate;
  private java.lang.CharSequence partnershipEndDate;
  private java.lang.CharSequence ppe;
  private boolean owner;
  private java.lang.CharSequence ofac;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Partner() {}

  /**
   * All-args constructor.
   * @param name The new value for name
   * @param bornDate The new value for bornDate
   * @param motherName The new value for motherName
   * @param document The new value for document
   * @param partnershipStartDate The new value for partnershipStartDate
   * @param partnershipEndDate The new value for partnershipEndDate
   * @param ppe The new value for ppe
   * @param owner The new value for owner
   * @param ofac The new value for ofac
   */
  public Partner(java.lang.CharSequence name, java.lang.CharSequence bornDate, java.lang.CharSequence motherName, java.lang.CharSequence document, java.lang.CharSequence partnershipStartDate, java.lang.CharSequence partnershipEndDate, java.lang.CharSequence ppe, java.lang.Boolean owner, java.lang.CharSequence ofac) {
    this.name = name;
    this.bornDate = bornDate;
    this.motherName = motherName;
    this.document = document;
    this.partnershipStartDate = partnershipStartDate;
    this.partnershipEndDate = partnershipEndDate;
    this.ppe = ppe;
    this.owner = owner;
    this.ofac = ofac;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return bornDate;
    case 2: return motherName;
    case 3: return document;
    case 4: return partnershipStartDate;
    case 5: return partnershipEndDate;
    case 6: return ppe;
    case 7: return owner;
    case 8: return ofac;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: bornDate = (java.lang.CharSequence)value$; break;
    case 2: motherName = (java.lang.CharSequence)value$; break;
    case 3: document = (java.lang.CharSequence)value$; break;
    case 4: partnershipStartDate = (java.lang.CharSequence)value$; break;
    case 5: partnershipEndDate = (java.lang.CharSequence)value$; break;
    case 6: ppe = (java.lang.CharSequence)value$; break;
    case 7: owner = (java.lang.Boolean)value$; break;
    case 8: ofac = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'bornDate' field.
   * @return The value of the 'bornDate' field.
   */
  public java.lang.CharSequence getBornDate() {
    return bornDate;
  }


  /**
   * Sets the value of the 'bornDate' field.
   * @param value the value to set.
   */
  public void setBornDate(java.lang.CharSequence value) {
    this.bornDate = value;
  }

  /**
   * Gets the value of the 'motherName' field.
   * @return The value of the 'motherName' field.
   */
  public java.lang.CharSequence getMotherName() {
    return motherName;
  }


  /**
   * Sets the value of the 'motherName' field.
   * @param value the value to set.
   */
  public void setMotherName(java.lang.CharSequence value) {
    this.motherName = value;
  }

  /**
   * Gets the value of the 'document' field.
   * @return The value of the 'document' field.
   */
  public java.lang.CharSequence getDocument() {
    return document;
  }


  /**
   * Sets the value of the 'document' field.
   * @param value the value to set.
   */
  public void setDocument(java.lang.CharSequence value) {
    this.document = value;
  }

  /**
   * Gets the value of the 'partnershipStartDate' field.
   * @return The value of the 'partnershipStartDate' field.
   */
  public java.lang.CharSequence getPartnershipStartDate() {
    return partnershipStartDate;
  }


  /**
   * Sets the value of the 'partnershipStartDate' field.
   * @param value the value to set.
   */
  public void setPartnershipStartDate(java.lang.CharSequence value) {
    this.partnershipStartDate = value;
  }

  /**
   * Gets the value of the 'partnershipEndDate' field.
   * @return The value of the 'partnershipEndDate' field.
   */
  public java.lang.CharSequence getPartnershipEndDate() {
    return partnershipEndDate;
  }


  /**
   * Sets the value of the 'partnershipEndDate' field.
   * @param value the value to set.
   */
  public void setPartnershipEndDate(java.lang.CharSequence value) {
    this.partnershipEndDate = value;
  }

  /**
   * Gets the value of the 'ppe' field.
   * @return The value of the 'ppe' field.
   */
  public java.lang.CharSequence getPpe() {
    return ppe;
  }


  /**
   * Sets the value of the 'ppe' field.
   * @param value the value to set.
   */
  public void setPpe(java.lang.CharSequence value) {
    this.ppe = value;
  }

  /**
   * Gets the value of the 'owner' field.
   * @return The value of the 'owner' field.
   */
  public boolean getOwner() {
    return owner;
  }


  /**
   * Sets the value of the 'owner' field.
   * @param value the value to set.
   */
  public void setOwner(boolean value) {
    this.owner = value;
  }

  /**
   * Gets the value of the 'ofac' field.
   * @return The value of the 'ofac' field.
   */
  public java.lang.CharSequence getOfac() {
    return ofac;
  }


  /**
   * Sets the value of the 'ofac' field.
   * @param value the value to set.
   */
  public void setOfac(java.lang.CharSequence value) {
    this.ofac = value;
  }

  /**
   * Creates a new Partner RecordBuilder.
   * @return A new Partner RecordBuilder
   */
  public static ps.customer.event.avro.Partner.Builder newBuilder() {
    return new ps.customer.event.avro.Partner.Builder();
  }

  /**
   * Creates a new Partner RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Partner RecordBuilder
   */
  public static ps.customer.event.avro.Partner.Builder newBuilder(ps.customer.event.avro.Partner.Builder other) {
    if (other == null) {
      return new ps.customer.event.avro.Partner.Builder();
    } else {
      return new ps.customer.event.avro.Partner.Builder(other);
    }
  }

  /**
   * Creates a new Partner RecordBuilder by copying an existing Partner instance.
   * @param other The existing instance to copy.
   * @return A new Partner RecordBuilder
   */
  public static ps.customer.event.avro.Partner.Builder newBuilder(ps.customer.event.avro.Partner other) {
    if (other == null) {
      return new ps.customer.event.avro.Partner.Builder();
    } else {
      return new ps.customer.event.avro.Partner.Builder(other);
    }
  }

  /**
   * RecordBuilder for Partner instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Partner>
    implements org.apache.avro.data.RecordBuilder<Partner> {

    private java.lang.CharSequence name;
    private java.lang.CharSequence bornDate;
    private java.lang.CharSequence motherName;
    private java.lang.CharSequence document;
    private java.lang.CharSequence partnershipStartDate;
    private java.lang.CharSequence partnershipEndDate;
    private java.lang.CharSequence ppe;
    private boolean owner;
    private java.lang.CharSequence ofac;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ps.customer.event.avro.Partner.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.bornDate)) {
        this.bornDate = data().deepCopy(fields()[1].schema(), other.bornDate);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.motherName)) {
        this.motherName = data().deepCopy(fields()[2].schema(), other.motherName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.document)) {
        this.document = data().deepCopy(fields()[3].schema(), other.document);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.partnershipStartDate)) {
        this.partnershipStartDate = data().deepCopy(fields()[4].schema(), other.partnershipStartDate);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.partnershipEndDate)) {
        this.partnershipEndDate = data().deepCopy(fields()[5].schema(), other.partnershipEndDate);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.ppe)) {
        this.ppe = data().deepCopy(fields()[6].schema(), other.ppe);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.owner)) {
        this.owner = data().deepCopy(fields()[7].schema(), other.owner);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.ofac)) {
        this.ofac = data().deepCopy(fields()[8].schema(), other.ofac);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing Partner instance
     * @param other The existing instance to copy.
     */
    private Builder(ps.customer.event.avro.Partner other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.bornDate)) {
        this.bornDate = data().deepCopy(fields()[1].schema(), other.bornDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.motherName)) {
        this.motherName = data().deepCopy(fields()[2].schema(), other.motherName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.document)) {
        this.document = data().deepCopy(fields()[3].schema(), other.document);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.partnershipStartDate)) {
        this.partnershipStartDate = data().deepCopy(fields()[4].schema(), other.partnershipStartDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.partnershipEndDate)) {
        this.partnershipEndDate = data().deepCopy(fields()[5].schema(), other.partnershipEndDate);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.ppe)) {
        this.ppe = data().deepCopy(fields()[6].schema(), other.ppe);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.owner)) {
        this.owner = data().deepCopy(fields()[7].schema(), other.owner);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.ofac)) {
        this.ofac = data().deepCopy(fields()[8].schema(), other.ofac);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'bornDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getBornDate() {
      return bornDate;
    }


    /**
      * Sets the value of the 'bornDate' field.
      * @param value The value of 'bornDate'.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder setBornDate(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.bornDate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'bornDate' field has been set.
      * @return True if the 'bornDate' field has been set, false otherwise.
      */
    public boolean hasBornDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'bornDate' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder clearBornDate() {
      bornDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'motherName' field.
      * @return The value.
      */
    public java.lang.CharSequence getMotherName() {
      return motherName;
    }


    /**
      * Sets the value of the 'motherName' field.
      * @param value The value of 'motherName'.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder setMotherName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.motherName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'motherName' field has been set.
      * @return True if the 'motherName' field has been set, false otherwise.
      */
    public boolean hasMotherName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'motherName' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder clearMotherName() {
      motherName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'document' field.
      * @return The value.
      */
    public java.lang.CharSequence getDocument() {
      return document;
    }


    /**
      * Sets the value of the 'document' field.
      * @param value The value of 'document'.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder setDocument(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.document = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'document' field has been set.
      * @return True if the 'document' field has been set, false otherwise.
      */
    public boolean hasDocument() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'document' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder clearDocument() {
      document = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'partnershipStartDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getPartnershipStartDate() {
      return partnershipStartDate;
    }


    /**
      * Sets the value of the 'partnershipStartDate' field.
      * @param value The value of 'partnershipStartDate'.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder setPartnershipStartDate(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.partnershipStartDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'partnershipStartDate' field has been set.
      * @return True if the 'partnershipStartDate' field has been set, false otherwise.
      */
    public boolean hasPartnershipStartDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'partnershipStartDate' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder clearPartnershipStartDate() {
      partnershipStartDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'partnershipEndDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getPartnershipEndDate() {
      return partnershipEndDate;
    }


    /**
      * Sets the value of the 'partnershipEndDate' field.
      * @param value The value of 'partnershipEndDate'.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder setPartnershipEndDate(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.partnershipEndDate = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'partnershipEndDate' field has been set.
      * @return True if the 'partnershipEndDate' field has been set, false otherwise.
      */
    public boolean hasPartnershipEndDate() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'partnershipEndDate' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder clearPartnershipEndDate() {
      partnershipEndDate = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'ppe' field.
      * @return The value.
      */
    public java.lang.CharSequence getPpe() {
      return ppe;
    }


    /**
      * Sets the value of the 'ppe' field.
      * @param value The value of 'ppe'.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder setPpe(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.ppe = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'ppe' field has been set.
      * @return True if the 'ppe' field has been set, false otherwise.
      */
    public boolean hasPpe() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'ppe' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder clearPpe() {
      ppe = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'owner' field.
      * @return The value.
      */
    public boolean getOwner() {
      return owner;
    }


    /**
      * Sets the value of the 'owner' field.
      * @param value The value of 'owner'.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder setOwner(boolean value) {
      validate(fields()[7], value);
      this.owner = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'owner' field has been set.
      * @return True if the 'owner' field has been set, false otherwise.
      */
    public boolean hasOwner() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'owner' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder clearOwner() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'ofac' field.
      * @return The value.
      */
    public java.lang.CharSequence getOfac() {
      return ofac;
    }


    /**
      * Sets the value of the 'ofac' field.
      * @param value The value of 'ofac'.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder setOfac(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.ofac = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'ofac' field has been set.
      * @return True if the 'ofac' field has been set, false otherwise.
      */
    public boolean hasOfac() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'ofac' field.
      * @return This builder.
      */
    public ps.customer.event.avro.Partner.Builder clearOfac() {
      ofac = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Partner build() {
      try {
        Partner record = new Partner();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.bornDate = fieldSetFlags()[1] ? this.bornDate : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.motherName = fieldSetFlags()[2] ? this.motherName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.document = fieldSetFlags()[3] ? this.document : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.partnershipStartDate = fieldSetFlags()[4] ? this.partnershipStartDate : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.partnershipEndDate = fieldSetFlags()[5] ? this.partnershipEndDate : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.ppe = fieldSetFlags()[6] ? this.ppe : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.owner = fieldSetFlags()[7] ? this.owner : (java.lang.Boolean) defaultValue(fields()[7]);
        record.ofac = fieldSetFlags()[8] ? this.ofac : (java.lang.CharSequence) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Partner>
    WRITER$ = (org.apache.avro.io.DatumWriter<Partner>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Partner>
    READER$ = (org.apache.avro.io.DatumReader<Partner>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.name == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.name);
    }

    if (this.bornDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.bornDate);
    }

    if (this.motherName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.motherName);
    }

    if (this.document == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.document);
    }

    if (this.partnershipStartDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.partnershipStartDate);
    }

    if (this.partnershipEndDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.partnershipEndDate);
    }

    if (this.ppe == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.ppe);
    }

    out.writeBoolean(this.owner);

    if (this.ofac == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.ofac);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.name = null;
      } else {
        this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.bornDate = null;
      } else {
        this.bornDate = in.readString(this.bornDate instanceof Utf8 ? (Utf8)this.bornDate : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.motherName = null;
      } else {
        this.motherName = in.readString(this.motherName instanceof Utf8 ? (Utf8)this.motherName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.document = null;
      } else {
        this.document = in.readString(this.document instanceof Utf8 ? (Utf8)this.document : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.partnershipStartDate = null;
      } else {
        this.partnershipStartDate = in.readString(this.partnershipStartDate instanceof Utf8 ? (Utf8)this.partnershipStartDate : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.partnershipEndDate = null;
      } else {
        this.partnershipEndDate = in.readString(this.partnershipEndDate instanceof Utf8 ? (Utf8)this.partnershipEndDate : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.ppe = null;
      } else {
        this.ppe = in.readString(this.ppe instanceof Utf8 ? (Utf8)this.ppe : null);
      }

      this.owner = in.readBoolean();

      if (in.readIndex() != 1) {
        in.readNull();
        this.ofac = null;
      } else {
        this.ofac = in.readString(this.ofac instanceof Utf8 ? (Utf8)this.ofac : null);
      }

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.name = null;
          } else {
            this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.bornDate = null;
          } else {
            this.bornDate = in.readString(this.bornDate instanceof Utf8 ? (Utf8)this.bornDate : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.motherName = null;
          } else {
            this.motherName = in.readString(this.motherName instanceof Utf8 ? (Utf8)this.motherName : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.document = null;
          } else {
            this.document = in.readString(this.document instanceof Utf8 ? (Utf8)this.document : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.partnershipStartDate = null;
          } else {
            this.partnershipStartDate = in.readString(this.partnershipStartDate instanceof Utf8 ? (Utf8)this.partnershipStartDate : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.partnershipEndDate = null;
          } else {
            this.partnershipEndDate = in.readString(this.partnershipEndDate instanceof Utf8 ? (Utf8)this.partnershipEndDate : null);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ppe = null;
          } else {
            this.ppe = in.readString(this.ppe instanceof Utf8 ? (Utf8)this.ppe : null);
          }
          break;

        case 7:
          this.owner = in.readBoolean();
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ofac = null;
          } else {
            this.ofac = in.readString(this.ofac instanceof Utf8 ? (Utf8)this.ofac : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










