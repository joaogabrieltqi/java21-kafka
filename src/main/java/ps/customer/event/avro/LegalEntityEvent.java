/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ps.customer.event.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LegalEntityEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2088237149263046075L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LegalEntityEvent\",\"namespace\":\"ps.customer.event.avro\",\"fields\":[{\"name\":\"corporateName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tradeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"foundationDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"logicalType\":\"timestamp-micros\"},{\"name\":\"stateRegistration\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"StateRegistration\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"exempted\",\"type\":\"boolean\",\"default\":false}]}],\"default\":null},{\"name\":\"partners\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Partner\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"bornDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"logicalType\":\"timestamp-micros\"},{\"name\":\"motherName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"document\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"partnershipStartDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"logicalType\":\"timestamp-micros\"},{\"name\":\"partnershipEndDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"logicalType\":\"timestamp-micros\"},{\"name\":\"ppe\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"owner\",\"type\":\"boolean\",\"default\":false},{\"name\":\"ofac\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"legalNature\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LegalNature\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<LegalEntityEvent> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LegalEntityEvent> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LegalEntityEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LegalEntityEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LegalEntityEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LegalEntityEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LegalEntityEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LegalEntityEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LegalEntityEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence corporateName;
  private java.lang.CharSequence tradeName;
  private java.lang.CharSequence foundationDate;
  private ps.customer.event.avro.StateRegistration stateRegistration;
  private java.util.List<ps.customer.event.avro.Partner> partners;
  private ps.customer.event.avro.LegalNature legalNature;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LegalEntityEvent() {}

  /**
   * All-args constructor.
   * @param corporateName The new value for corporateName
   * @param tradeName The new value for tradeName
   * @param foundationDate The new value for foundationDate
   * @param stateRegistration The new value for stateRegistration
   * @param partners The new value for partners
   * @param legalNature The new value for legalNature
   */
  public LegalEntityEvent(java.lang.CharSequence corporateName, java.lang.CharSequence tradeName, java.lang.CharSequence foundationDate, ps.customer.event.avro.StateRegistration stateRegistration, java.util.List<ps.customer.event.avro.Partner> partners, ps.customer.event.avro.LegalNature legalNature) {
    this.corporateName = corporateName;
    this.tradeName = tradeName;
    this.foundationDate = foundationDate;
    this.stateRegistration = stateRegistration;
    this.partners = partners;
    this.legalNature = legalNature;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return corporateName;
    case 1: return tradeName;
    case 2: return foundationDate;
    case 3: return stateRegistration;
    case 4: return partners;
    case 5: return legalNature;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: corporateName = (java.lang.CharSequence)value$; break;
    case 1: tradeName = (java.lang.CharSequence)value$; break;
    case 2: foundationDate = (java.lang.CharSequence)value$; break;
    case 3: stateRegistration = (ps.customer.event.avro.StateRegistration)value$; break;
    case 4: partners = (java.util.List<ps.customer.event.avro.Partner>)value$; break;
    case 5: legalNature = (ps.customer.event.avro.LegalNature)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'corporateName' field.
   * @return The value of the 'corporateName' field.
   */
  public java.lang.CharSequence getCorporateName() {
    return corporateName;
  }


  /**
   * Sets the value of the 'corporateName' field.
   * @param value the value to set.
   */
  public void setCorporateName(java.lang.CharSequence value) {
    this.corporateName = value;
  }

  /**
   * Gets the value of the 'tradeName' field.
   * @return The value of the 'tradeName' field.
   */
  public java.lang.CharSequence getTradeName() {
    return tradeName;
  }


  /**
   * Sets the value of the 'tradeName' field.
   * @param value the value to set.
   */
  public void setTradeName(java.lang.CharSequence value) {
    this.tradeName = value;
  }

  /**
   * Gets the value of the 'foundationDate' field.
   * @return The value of the 'foundationDate' field.
   */
  public java.lang.CharSequence getFoundationDate() {
    return foundationDate;
  }


  /**
   * Sets the value of the 'foundationDate' field.
   * @param value the value to set.
   */
  public void setFoundationDate(java.lang.CharSequence value) {
    this.foundationDate = value;
  }

  /**
   * Gets the value of the 'stateRegistration' field.
   * @return The value of the 'stateRegistration' field.
   */
  public ps.customer.event.avro.StateRegistration getStateRegistration() {
    return stateRegistration;
  }


  /**
   * Sets the value of the 'stateRegistration' field.
   * @param value the value to set.
   */
  public void setStateRegistration(ps.customer.event.avro.StateRegistration value) {
    this.stateRegistration = value;
  }

  /**
   * Gets the value of the 'partners' field.
   * @return The value of the 'partners' field.
   */
  public java.util.List<ps.customer.event.avro.Partner> getPartners() {
    return partners;
  }


  /**
   * Sets the value of the 'partners' field.
   * @param value the value to set.
   */
  public void setPartners(java.util.List<ps.customer.event.avro.Partner> value) {
    this.partners = value;
  }

  /**
   * Gets the value of the 'legalNature' field.
   * @return The value of the 'legalNature' field.
   */
  public ps.customer.event.avro.LegalNature getLegalNature() {
    return legalNature;
  }


  /**
   * Sets the value of the 'legalNature' field.
   * @param value the value to set.
   */
  public void setLegalNature(ps.customer.event.avro.LegalNature value) {
    this.legalNature = value;
  }

  /**
   * Creates a new LegalEntityEvent RecordBuilder.
   * @return A new LegalEntityEvent RecordBuilder
   */
  public static ps.customer.event.avro.LegalEntityEvent.Builder newBuilder() {
    return new ps.customer.event.avro.LegalEntityEvent.Builder();
  }

  /**
   * Creates a new LegalEntityEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LegalEntityEvent RecordBuilder
   */
  public static ps.customer.event.avro.LegalEntityEvent.Builder newBuilder(ps.customer.event.avro.LegalEntityEvent.Builder other) {
    if (other == null) {
      return new ps.customer.event.avro.LegalEntityEvent.Builder();
    } else {
      return new ps.customer.event.avro.LegalEntityEvent.Builder(other);
    }
  }

  /**
   * Creates a new LegalEntityEvent RecordBuilder by copying an existing LegalEntityEvent instance.
   * @param other The existing instance to copy.
   * @return A new LegalEntityEvent RecordBuilder
   */
  public static ps.customer.event.avro.LegalEntityEvent.Builder newBuilder(ps.customer.event.avro.LegalEntityEvent other) {
    if (other == null) {
      return new ps.customer.event.avro.LegalEntityEvent.Builder();
    } else {
      return new ps.customer.event.avro.LegalEntityEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for LegalEntityEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LegalEntityEvent>
    implements org.apache.avro.data.RecordBuilder<LegalEntityEvent> {

    private java.lang.CharSequence corporateName;
    private java.lang.CharSequence tradeName;
    private java.lang.CharSequence foundationDate;
    private ps.customer.event.avro.StateRegistration stateRegistration;
    private ps.customer.event.avro.StateRegistration.Builder stateRegistrationBuilder;
    private java.util.List<ps.customer.event.avro.Partner> partners;
    private ps.customer.event.avro.LegalNature legalNature;
    private ps.customer.event.avro.LegalNature.Builder legalNatureBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ps.customer.event.avro.LegalEntityEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.corporateName)) {
        this.corporateName = data().deepCopy(fields()[0].schema(), other.corporateName);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.tradeName)) {
        this.tradeName = data().deepCopy(fields()[1].schema(), other.tradeName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.foundationDate)) {
        this.foundationDate = data().deepCopy(fields()[2].schema(), other.foundationDate);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.stateRegistration)) {
        this.stateRegistration = data().deepCopy(fields()[3].schema(), other.stateRegistration);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasStateRegistrationBuilder()) {
        this.stateRegistrationBuilder = ps.customer.event.avro.StateRegistration.newBuilder(other.getStateRegistrationBuilder());
      }
      if (isValidValue(fields()[4], other.partners)) {
        this.partners = data().deepCopy(fields()[4].schema(), other.partners);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.legalNature)) {
        this.legalNature = data().deepCopy(fields()[5].schema(), other.legalNature);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasLegalNatureBuilder()) {
        this.legalNatureBuilder = ps.customer.event.avro.LegalNature.newBuilder(other.getLegalNatureBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing LegalEntityEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(ps.customer.event.avro.LegalEntityEvent other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.corporateName)) {
        this.corporateName = data().deepCopy(fields()[0].schema(), other.corporateName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tradeName)) {
        this.tradeName = data().deepCopy(fields()[1].schema(), other.tradeName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.foundationDate)) {
        this.foundationDate = data().deepCopy(fields()[2].schema(), other.foundationDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.stateRegistration)) {
        this.stateRegistration = data().deepCopy(fields()[3].schema(), other.stateRegistration);
        fieldSetFlags()[3] = true;
      }
      this.stateRegistrationBuilder = null;
      if (isValidValue(fields()[4], other.partners)) {
        this.partners = data().deepCopy(fields()[4].schema(), other.partners);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.legalNature)) {
        this.legalNature = data().deepCopy(fields()[5].schema(), other.legalNature);
        fieldSetFlags()[5] = true;
      }
      this.legalNatureBuilder = null;
    }

    /**
      * Gets the value of the 'corporateName' field.
      * @return The value.
      */
    public java.lang.CharSequence getCorporateName() {
      return corporateName;
    }


    /**
      * Sets the value of the 'corporateName' field.
      * @param value The value of 'corporateName'.
      * @return This builder.
      */
    public ps.customer.event.avro.LegalEntityEvent.Builder setCorporateName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.corporateName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'corporateName' field has been set.
      * @return True if the 'corporateName' field has been set, false otherwise.
      */
    public boolean hasCorporateName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'corporateName' field.
      * @return This builder.
      */
    public ps.customer.event.avro.LegalEntityEvent.Builder clearCorporateName() {
      corporateName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'tradeName' field.
      * @return The value.
      */
    public java.lang.CharSequence getTradeName() {
      return tradeName;
    }


    /**
      * Sets the value of the 'tradeName' field.
      * @param value The value of 'tradeName'.
      * @return This builder.
      */
    public ps.customer.event.avro.LegalEntityEvent.Builder setTradeName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.tradeName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'tradeName' field has been set.
      * @return True if the 'tradeName' field has been set, false otherwise.
      */
    public boolean hasTradeName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'tradeName' field.
      * @return This builder.
      */
    public ps.customer.event.avro.LegalEntityEvent.Builder clearTradeName() {
      tradeName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'foundationDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getFoundationDate() {
      return foundationDate;
    }


    /**
      * Sets the value of the 'foundationDate' field.
      * @param value The value of 'foundationDate'.
      * @return This builder.
      */
    public ps.customer.event.avro.LegalEntityEvent.Builder setFoundationDate(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.foundationDate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'foundationDate' field has been set.
      * @return True if the 'foundationDate' field has been set, false otherwise.
      */
    public boolean hasFoundationDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'foundationDate' field.
      * @return This builder.
      */
    public ps.customer.event.avro.LegalEntityEvent.Builder clearFoundationDate() {
      foundationDate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'stateRegistration' field.
      * @return The value.
      */
    public ps.customer.event.avro.StateRegistration getStateRegistration() {
      return stateRegistration;
    }


    /**
      * Sets the value of the 'stateRegistration' field.
      * @param value The value of 'stateRegistration'.
      * @return This builder.
      */
    public ps.customer.event.avro.LegalEntityEvent.Builder setStateRegistration(ps.customer.event.avro.StateRegistration value) {
      validate(fields()[3], value);
      this.stateRegistrationBuilder = null;
      this.stateRegistration = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'stateRegistration' field has been set.
      * @return True if the 'stateRegistration' field has been set, false otherwise.
      */
    public boolean hasStateRegistration() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'stateRegistration' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ps.customer.event.avro.StateRegistration.Builder getStateRegistrationBuilder() {
      if (stateRegistrationBuilder == null) {
        if (hasStateRegistration()) {
          setStateRegistrationBuilder(ps.customer.event.avro.StateRegistration.newBuilder(stateRegistration));
        } else {
          setStateRegistrationBuilder(ps.customer.event.avro.StateRegistration.newBuilder());
        }
      }
      return stateRegistrationBuilder;
    }

    /**
     * Sets the Builder instance for the 'stateRegistration' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public ps.customer.event.avro.LegalEntityEvent.Builder setStateRegistrationBuilder(ps.customer.event.avro.StateRegistration.Builder value) {
      clearStateRegistration();
      stateRegistrationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'stateRegistration' field has an active Builder instance
     * @return True if the 'stateRegistration' field has an active Builder instance
     */
    public boolean hasStateRegistrationBuilder() {
      return stateRegistrationBuilder != null;
    }

    /**
      * Clears the value of the 'stateRegistration' field.
      * @return This builder.
      */
    public ps.customer.event.avro.LegalEntityEvent.Builder clearStateRegistration() {
      stateRegistration = null;
      stateRegistrationBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'partners' field.
      * @return The value.
      */
    public java.util.List<ps.customer.event.avro.Partner> getPartners() {
      return partners;
    }


    /**
      * Sets the value of the 'partners' field.
      * @param value The value of 'partners'.
      * @return This builder.
      */
    public ps.customer.event.avro.LegalEntityEvent.Builder setPartners(java.util.List<ps.customer.event.avro.Partner> value) {
      validate(fields()[4], value);
      this.partners = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'partners' field has been set.
      * @return True if the 'partners' field has been set, false otherwise.
      */
    public boolean hasPartners() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'partners' field.
      * @return This builder.
      */
    public ps.customer.event.avro.LegalEntityEvent.Builder clearPartners() {
      partners = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'legalNature' field.
      * @return The value.
      */
    public ps.customer.event.avro.LegalNature getLegalNature() {
      return legalNature;
    }


    /**
      * Sets the value of the 'legalNature' field.
      * @param value The value of 'legalNature'.
      * @return This builder.
      */
    public ps.customer.event.avro.LegalEntityEvent.Builder setLegalNature(ps.customer.event.avro.LegalNature value) {
      validate(fields()[5], value);
      this.legalNatureBuilder = null;
      this.legalNature = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'legalNature' field has been set.
      * @return True if the 'legalNature' field has been set, false otherwise.
      */
    public boolean hasLegalNature() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'legalNature' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ps.customer.event.avro.LegalNature.Builder getLegalNatureBuilder() {
      if (legalNatureBuilder == null) {
        if (hasLegalNature()) {
          setLegalNatureBuilder(ps.customer.event.avro.LegalNature.newBuilder(legalNature));
        } else {
          setLegalNatureBuilder(ps.customer.event.avro.LegalNature.newBuilder());
        }
      }
      return legalNatureBuilder;
    }

    /**
     * Sets the Builder instance for the 'legalNature' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public ps.customer.event.avro.LegalEntityEvent.Builder setLegalNatureBuilder(ps.customer.event.avro.LegalNature.Builder value) {
      clearLegalNature();
      legalNatureBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'legalNature' field has an active Builder instance
     * @return True if the 'legalNature' field has an active Builder instance
     */
    public boolean hasLegalNatureBuilder() {
      return legalNatureBuilder != null;
    }

    /**
      * Clears the value of the 'legalNature' field.
      * @return This builder.
      */
    public ps.customer.event.avro.LegalEntityEvent.Builder clearLegalNature() {
      legalNature = null;
      legalNatureBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LegalEntityEvent build() {
      try {
        LegalEntityEvent record = new LegalEntityEvent();
        record.corporateName = fieldSetFlags()[0] ? this.corporateName : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.tradeName = fieldSetFlags()[1] ? this.tradeName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.foundationDate = fieldSetFlags()[2] ? this.foundationDate : (java.lang.CharSequence) defaultValue(fields()[2]);
        if (stateRegistrationBuilder != null) {
          try {
            record.stateRegistration = this.stateRegistrationBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("stateRegistration"));
            throw e;
          }
        } else {
          record.stateRegistration = fieldSetFlags()[3] ? this.stateRegistration : (ps.customer.event.avro.StateRegistration) defaultValue(fields()[3]);
        }
        record.partners = fieldSetFlags()[4] ? this.partners : (java.util.List<ps.customer.event.avro.Partner>) defaultValue(fields()[4]);
        if (legalNatureBuilder != null) {
          try {
            record.legalNature = this.legalNatureBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("legalNature"));
            throw e;
          }
        } else {
          record.legalNature = fieldSetFlags()[5] ? this.legalNature : (ps.customer.event.avro.LegalNature) defaultValue(fields()[5]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LegalEntityEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<LegalEntityEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LegalEntityEvent>
    READER$ = (org.apache.avro.io.DatumReader<LegalEntityEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.corporateName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.corporateName);
    }

    if (this.tradeName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.tradeName);
    }

    if (this.foundationDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.foundationDate);
    }

    if (this.stateRegistration == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.stateRegistration.customEncode(out);
    }

    if (this.partners == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.partners.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (ps.customer.event.avro.Partner e0: this.partners) {
        actualSize0++;
        out.startItem();
        e0.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.legalNature == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.legalNature.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.corporateName = null;
      } else {
        this.corporateName = in.readString(this.corporateName instanceof Utf8 ? (Utf8)this.corporateName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.tradeName = null;
      } else {
        this.tradeName = in.readString(this.tradeName instanceof Utf8 ? (Utf8)this.tradeName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.foundationDate = null;
      } else {
        this.foundationDate = in.readString(this.foundationDate instanceof Utf8 ? (Utf8)this.foundationDate : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.stateRegistration = null;
      } else {
        if (this.stateRegistration == null) {
          this.stateRegistration = new ps.customer.event.avro.StateRegistration();
        }
        this.stateRegistration.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.partners = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<ps.customer.event.avro.Partner> a0 = this.partners;
        if (a0 == null) {
          a0 = new SpecificData.Array<ps.customer.event.avro.Partner>((int)size0, SCHEMA$.getField("partners").schema().getTypes().get(1));
          this.partners = a0;
        } else a0.clear();
        SpecificData.Array<ps.customer.event.avro.Partner> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<ps.customer.event.avro.Partner>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            ps.customer.event.avro.Partner e0 = (ga0 != null ? ga0.peek() : null);
            if (e0 == null) {
              e0 = new ps.customer.event.avro.Partner();
            }
            e0.customDecode(in);
            a0.add(e0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.legalNature = null;
      } else {
        if (this.legalNature == null) {
          this.legalNature = new ps.customer.event.avro.LegalNature();
        }
        this.legalNature.customDecode(in);
      }

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.corporateName = null;
          } else {
            this.corporateName = in.readString(this.corporateName instanceof Utf8 ? (Utf8)this.corporateName : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.tradeName = null;
          } else {
            this.tradeName = in.readString(this.tradeName instanceof Utf8 ? (Utf8)this.tradeName : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.foundationDate = null;
          } else {
            this.foundationDate = in.readString(this.foundationDate instanceof Utf8 ? (Utf8)this.foundationDate : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.stateRegistration = null;
          } else {
            if (this.stateRegistration == null) {
              this.stateRegistration = new ps.customer.event.avro.StateRegistration();
            }
            this.stateRegistration.customDecode(in);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.partners = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<ps.customer.event.avro.Partner> a0 = this.partners;
            if (a0 == null) {
              a0 = new SpecificData.Array<ps.customer.event.avro.Partner>((int)size0, SCHEMA$.getField("partners").schema().getTypes().get(1));
              this.partners = a0;
            } else a0.clear();
            SpecificData.Array<ps.customer.event.avro.Partner> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<ps.customer.event.avro.Partner>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                ps.customer.event.avro.Partner e0 = (ga0 != null ? ga0.peek() : null);
                if (e0 == null) {
                  e0 = new ps.customer.event.avro.Partner();
                }
                e0.customDecode(in);
                a0.add(e0);
              }
            }
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.legalNature = null;
          } else {
            if (this.legalNature == null) {
              this.legalNature = new ps.customer.event.avro.LegalNature();
            }
            this.legalNature.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










