/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ps.customer.event.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CustomerEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2984625195332388618L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CustomerEvent\",\"namespace\":\"ps.customer.event.avro\",\"fields\":[{\"name\":\"individualEvent\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"IndividualEvent\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"bornDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"logicalType\":\"timestamp-micros\"},{\"name\":\"motherName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nationality\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"ufNaturality\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"naturality\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"registryInformation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"RegistryInformation\",\"fields\":[{\"name\":\"rg\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"issuingOranization\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"issuingDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"logicalType\":\"timestamp-micros\"}]}],\"default\":null}]}],\"default\":null},{\"name\":\"legalEntityEvent\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LegalEntityEvent\",\"fields\":[{\"name\":\"corporateName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"tradeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"foundationDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"logicalType\":\"timestamp-micros\"},{\"name\":\"stateRegistration\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"StateRegistration\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"exempted\",\"type\":\"boolean\",\"default\":false}]}],\"default\":null},{\"name\":\"partners\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Partner\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"bornDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"logicalType\":\"timestamp-micros\"},{\"name\":\"motherName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"document\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"partnershipStartDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"logicalType\":\"timestamp-micros\"},{\"name\":\"partnershipEndDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"logicalType\":\"timestamp-micros\"},{\"name\":\"ppe\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"owner\",\"type\":\"boolean\",\"default\":false},{\"name\":\"ofac\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"legalNature\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LegalNature\",\"fields\":[{\"name\":\"code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"customerType\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"CustomerType\",\"symbols\":[\"PF\",\"PJ\",\"UNRECOGNIZED\"]}]},{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"personId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"alternativeEmail\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addresses\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Address\",\"fields\":[{\"name\":\"label\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"street\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"number\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"district\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"city\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"postalCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"country\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"complement\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"phones\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Phone\",\"fields\":[{\"name\":\"label\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"areaCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"number\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"obs\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"phoneType\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"PhoneType\",\"symbols\":[\"MOBILE\",\"LANDLINE\",\"NOT_INFORMED\",\"UNRECOGNIZED\"]}]}]}}],\"default\":null},{\"name\":\"audit\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Audit\",\"fields\":[{\"name\":\"requestIp\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"requestPort\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"origin\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updateOrigin\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"changeAgent\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"input\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"deviceId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"business\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Business\",\"fields\":[{\"name\":\"businessCategory\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"billIdentification\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"businessCategorySecondary\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"checkoutPhone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customerServiceEmail\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nickname\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"directAcquirer\",\"type\":\"boolean\",\"default\":false},{\"name\":\"urls\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"URL\",\"fields\":[{\"name\":\"label\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"url\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null}]}],\"default\":null},{\"name\":\"securityPhrase\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"document\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"metadata\",\"type\":[\"null\",{\"type\":\"map\",\"values\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"options\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Options\",\"fields\":[{\"name\":\"enableNewsletter\",\"type\":\"boolean\",\"default\":false},{\"name\":\"contractAccepted\",\"type\":\"boolean\",\"default\":false}]}],\"default\":null},{\"name\":\"showAddress\",\"type\":\"boolean\",\"default\":false},{\"name\":\"registrationDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"logicalType\":\"timestamp-micros\"},{\"name\":\"status\",\"type\":[\"nul","l\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"eventDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null,\"logicalType\":\"timestamp-micros\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CustomerEvent> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CustomerEvent> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CustomerEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CustomerEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CustomerEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CustomerEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CustomerEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CustomerEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CustomerEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private ps.customer.event.avro.IndividualEvent individualEvent;
  private ps.customer.event.avro.LegalEntityEvent legalEntityEvent;
  private ps.customer.event.avro.CustomerType customerType;
  private java.lang.CharSequence id;
  private java.lang.CharSequence personId;
  private java.lang.CharSequence email;
  private java.lang.CharSequence alternativeEmail;
  private java.util.List<ps.customer.event.avro.Address> addresses;
  private java.util.List<ps.customer.event.avro.Phone> phones;
  private ps.customer.event.avro.Audit audit;
  private ps.customer.event.avro.Business business;
  private java.lang.CharSequence securityPhrase;
  private java.lang.CharSequence document;
  private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> metadata;
  private ps.customer.event.avro.Options options;
  private boolean showAddress;
  private java.lang.CharSequence registrationDate;
  private java.lang.CharSequence status;
  private java.lang.CharSequence eventDate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CustomerEvent() {}

  /**
   * All-args constructor.
   * @param individualEvent The new value for individualEvent
   * @param legalEntityEvent The new value for legalEntityEvent
   * @param customerType The new value for customerType
   * @param id The new value for id
   * @param personId The new value for personId
   * @param email The new value for email
   * @param alternativeEmail The new value for alternativeEmail
   * @param addresses The new value for addresses
   * @param phones The new value for phones
   * @param audit The new value for audit
   * @param business The new value for business
   * @param securityPhrase The new value for securityPhrase
   * @param document The new value for document
   * @param metadata The new value for metadata
   * @param options The new value for options
   * @param showAddress The new value for showAddress
   * @param registrationDate The new value for registrationDate
   * @param status The new value for status
   * @param eventDate The new value for eventDate
   */
  public CustomerEvent(ps.customer.event.avro.IndividualEvent individualEvent, ps.customer.event.avro.LegalEntityEvent legalEntityEvent, ps.customer.event.avro.CustomerType customerType, java.lang.CharSequence id, java.lang.CharSequence personId, java.lang.CharSequence email, java.lang.CharSequence alternativeEmail, java.util.List<ps.customer.event.avro.Address> addresses, java.util.List<ps.customer.event.avro.Phone> phones, ps.customer.event.avro.Audit audit, ps.customer.event.avro.Business business, java.lang.CharSequence securityPhrase, java.lang.CharSequence document, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> metadata, ps.customer.event.avro.Options options, java.lang.Boolean showAddress, java.lang.CharSequence registrationDate, java.lang.CharSequence status, java.lang.CharSequence eventDate) {
    this.individualEvent = individualEvent;
    this.legalEntityEvent = legalEntityEvent;
    this.customerType = customerType;
    this.id = id;
    this.personId = personId;
    this.email = email;
    this.alternativeEmail = alternativeEmail;
    this.addresses = addresses;
    this.phones = phones;
    this.audit = audit;
    this.business = business;
    this.securityPhrase = securityPhrase;
    this.document = document;
    this.metadata = metadata;
    this.options = options;
    this.showAddress = showAddress;
    this.registrationDate = registrationDate;
    this.status = status;
    this.eventDate = eventDate;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return individualEvent;
    case 1: return legalEntityEvent;
    case 2: return customerType;
    case 3: return id;
    case 4: return personId;
    case 5: return email;
    case 6: return alternativeEmail;
    case 7: return addresses;
    case 8: return phones;
    case 9: return audit;
    case 10: return business;
    case 11: return securityPhrase;
    case 12: return document;
    case 13: return metadata;
    case 14: return options;
    case 15: return showAddress;
    case 16: return registrationDate;
    case 17: return status;
    case 18: return eventDate;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: individualEvent = (ps.customer.event.avro.IndividualEvent)value$; break;
    case 1: legalEntityEvent = (ps.customer.event.avro.LegalEntityEvent)value$; break;
    case 2: customerType = (ps.customer.event.avro.CustomerType)value$; break;
    case 3: id = (java.lang.CharSequence)value$; break;
    case 4: personId = (java.lang.CharSequence)value$; break;
    case 5: email = (java.lang.CharSequence)value$; break;
    case 6: alternativeEmail = (java.lang.CharSequence)value$; break;
    case 7: addresses = (java.util.List<ps.customer.event.avro.Address>)value$; break;
    case 8: phones = (java.util.List<ps.customer.event.avro.Phone>)value$; break;
    case 9: audit = (ps.customer.event.avro.Audit)value$; break;
    case 10: business = (ps.customer.event.avro.Business)value$; break;
    case 11: securityPhrase = (java.lang.CharSequence)value$; break;
    case 12: document = (java.lang.CharSequence)value$; break;
    case 13: metadata = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 14: options = (ps.customer.event.avro.Options)value$; break;
    case 15: showAddress = (java.lang.Boolean)value$; break;
    case 16: registrationDate = (java.lang.CharSequence)value$; break;
    case 17: status = (java.lang.CharSequence)value$; break;
    case 18: eventDate = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'individualEvent' field.
   * @return The value of the 'individualEvent' field.
   */
  public ps.customer.event.avro.IndividualEvent getIndividualEvent() {
    return individualEvent;
  }


  /**
   * Sets the value of the 'individualEvent' field.
   * @param value the value to set.
   */
  public void setIndividualEvent(ps.customer.event.avro.IndividualEvent value) {
    this.individualEvent = value;
  }

  /**
   * Gets the value of the 'legalEntityEvent' field.
   * @return The value of the 'legalEntityEvent' field.
   */
  public ps.customer.event.avro.LegalEntityEvent getLegalEntityEvent() {
    return legalEntityEvent;
  }


  /**
   * Sets the value of the 'legalEntityEvent' field.
   * @param value the value to set.
   */
  public void setLegalEntityEvent(ps.customer.event.avro.LegalEntityEvent value) {
    this.legalEntityEvent = value;
  }

  /**
   * Gets the value of the 'customerType' field.
   * @return The value of the 'customerType' field.
   */
  public ps.customer.event.avro.CustomerType getCustomerType() {
    return customerType;
  }


  /**
   * Sets the value of the 'customerType' field.
   * @param value the value to set.
   */
  public void setCustomerType(ps.customer.event.avro.CustomerType value) {
    this.customerType = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'personId' field.
   * @return The value of the 'personId' field.
   */
  public java.lang.CharSequence getPersonId() {
    return personId;
  }


  /**
   * Sets the value of the 'personId' field.
   * @param value the value to set.
   */
  public void setPersonId(java.lang.CharSequence value) {
    this.personId = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.CharSequence getEmail() {
    return email;
  }


  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.CharSequence value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'alternativeEmail' field.
   * @return The value of the 'alternativeEmail' field.
   */
  public java.lang.CharSequence getAlternativeEmail() {
    return alternativeEmail;
  }


  /**
   * Sets the value of the 'alternativeEmail' field.
   * @param value the value to set.
   */
  public void setAlternativeEmail(java.lang.CharSequence value) {
    this.alternativeEmail = value;
  }

  /**
   * Gets the value of the 'addresses' field.
   * @return The value of the 'addresses' field.
   */
  public java.util.List<ps.customer.event.avro.Address> getAddresses() {
    return addresses;
  }


  /**
   * Sets the value of the 'addresses' field.
   * @param value the value to set.
   */
  public void setAddresses(java.util.List<ps.customer.event.avro.Address> value) {
    this.addresses = value;
  }

  /**
   * Gets the value of the 'phones' field.
   * @return The value of the 'phones' field.
   */
  public java.util.List<ps.customer.event.avro.Phone> getPhones() {
    return phones;
  }


  /**
   * Sets the value of the 'phones' field.
   * @param value the value to set.
   */
  public void setPhones(java.util.List<ps.customer.event.avro.Phone> value) {
    this.phones = value;
  }

  /**
   * Gets the value of the 'audit' field.
   * @return The value of the 'audit' field.
   */
  public ps.customer.event.avro.Audit getAudit() {
    return audit;
  }


  /**
   * Sets the value of the 'audit' field.
   * @param value the value to set.
   */
  public void setAudit(ps.customer.event.avro.Audit value) {
    this.audit = value;
  }

  /**
   * Gets the value of the 'business' field.
   * @return The value of the 'business' field.
   */
  public ps.customer.event.avro.Business getBusiness() {
    return business;
  }


  /**
   * Sets the value of the 'business' field.
   * @param value the value to set.
   */
  public void setBusiness(ps.customer.event.avro.Business value) {
    this.business = value;
  }

  /**
   * Gets the value of the 'securityPhrase' field.
   * @return The value of the 'securityPhrase' field.
   */
  public java.lang.CharSequence getSecurityPhrase() {
    return securityPhrase;
  }


  /**
   * Sets the value of the 'securityPhrase' field.
   * @param value the value to set.
   */
  public void setSecurityPhrase(java.lang.CharSequence value) {
    this.securityPhrase = value;
  }

  /**
   * Gets the value of the 'document' field.
   * @return The value of the 'document' field.
   */
  public java.lang.CharSequence getDocument() {
    return document;
  }


  /**
   * Sets the value of the 'document' field.
   * @param value the value to set.
   */
  public void setDocument(java.lang.CharSequence value) {
    this.document = value;
  }

  /**
   * Gets the value of the 'metadata' field.
   * @return The value of the 'metadata' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getMetadata() {
    return metadata;
  }


  /**
   * Sets the value of the 'metadata' field.
   * @param value the value to set.
   */
  public void setMetadata(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.metadata = value;
  }

  /**
   * Gets the value of the 'options' field.
   * @return The value of the 'options' field.
   */
  public ps.customer.event.avro.Options getOptions() {
    return options;
  }


  /**
   * Sets the value of the 'options' field.
   * @param value the value to set.
   */
  public void setOptions(ps.customer.event.avro.Options value) {
    this.options = value;
  }

  /**
   * Gets the value of the 'showAddress' field.
   * @return The value of the 'showAddress' field.
   */
  public boolean getShowAddress() {
    return showAddress;
  }


  /**
   * Sets the value of the 'showAddress' field.
   * @param value the value to set.
   */
  public void setShowAddress(boolean value) {
    this.showAddress = value;
  }

  /**
   * Gets the value of the 'registrationDate' field.
   * @return The value of the 'registrationDate' field.
   */
  public java.lang.CharSequence getRegistrationDate() {
    return registrationDate;
  }


  /**
   * Sets the value of the 'registrationDate' field.
   * @param value the value to set.
   */
  public void setRegistrationDate(java.lang.CharSequence value) {
    this.registrationDate = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.CharSequence getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'eventDate' field.
   * @return The value of the 'eventDate' field.
   */
  public java.lang.CharSequence getEventDate() {
    return eventDate;
  }


  /**
   * Sets the value of the 'eventDate' field.
   * @param value the value to set.
   */
  public void setEventDate(java.lang.CharSequence value) {
    this.eventDate = value;
  }

  /**
   * Creates a new CustomerEvent RecordBuilder.
   * @return A new CustomerEvent RecordBuilder
   */
  public static ps.customer.event.avro.CustomerEvent.Builder newBuilder() {
    return new ps.customer.event.avro.CustomerEvent.Builder();
  }

  /**
   * Creates a new CustomerEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CustomerEvent RecordBuilder
   */
  public static ps.customer.event.avro.CustomerEvent.Builder newBuilder(ps.customer.event.avro.CustomerEvent.Builder other) {
    if (other == null) {
      return new ps.customer.event.avro.CustomerEvent.Builder();
    } else {
      return new ps.customer.event.avro.CustomerEvent.Builder(other);
    }
  }

  /**
   * Creates a new CustomerEvent RecordBuilder by copying an existing CustomerEvent instance.
   * @param other The existing instance to copy.
   * @return A new CustomerEvent RecordBuilder
   */
  public static ps.customer.event.avro.CustomerEvent.Builder newBuilder(ps.customer.event.avro.CustomerEvent other) {
    if (other == null) {
      return new ps.customer.event.avro.CustomerEvent.Builder();
    } else {
      return new ps.customer.event.avro.CustomerEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for CustomerEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CustomerEvent>
    implements org.apache.avro.data.RecordBuilder<CustomerEvent> {

    private ps.customer.event.avro.IndividualEvent individualEvent;
    private ps.customer.event.avro.IndividualEvent.Builder individualEventBuilder;
    private ps.customer.event.avro.LegalEntityEvent legalEntityEvent;
    private ps.customer.event.avro.LegalEntityEvent.Builder legalEntityEventBuilder;
    private ps.customer.event.avro.CustomerType customerType;
    private java.lang.CharSequence id;
    private java.lang.CharSequence personId;
    private java.lang.CharSequence email;
    private java.lang.CharSequence alternativeEmail;
    private java.util.List<ps.customer.event.avro.Address> addresses;
    private java.util.List<ps.customer.event.avro.Phone> phones;
    private ps.customer.event.avro.Audit audit;
    private ps.customer.event.avro.Audit.Builder auditBuilder;
    private ps.customer.event.avro.Business business;
    private ps.customer.event.avro.Business.Builder businessBuilder;
    private java.lang.CharSequence securityPhrase;
    private java.lang.CharSequence document;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> metadata;
    private ps.customer.event.avro.Options options;
    private ps.customer.event.avro.Options.Builder optionsBuilder;
    private boolean showAddress;
    private java.lang.CharSequence registrationDate;
    private java.lang.CharSequence status;
    private java.lang.CharSequence eventDate;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ps.customer.event.avro.CustomerEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.individualEvent)) {
        this.individualEvent = data().deepCopy(fields()[0].schema(), other.individualEvent);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasIndividualEventBuilder()) {
        this.individualEventBuilder = ps.customer.event.avro.IndividualEvent.newBuilder(other.getIndividualEventBuilder());
      }
      if (isValidValue(fields()[1], other.legalEntityEvent)) {
        this.legalEntityEvent = data().deepCopy(fields()[1].schema(), other.legalEntityEvent);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasLegalEntityEventBuilder()) {
        this.legalEntityEventBuilder = ps.customer.event.avro.LegalEntityEvent.newBuilder(other.getLegalEntityEventBuilder());
      }
      if (isValidValue(fields()[2], other.customerType)) {
        this.customerType = data().deepCopy(fields()[2].schema(), other.customerType);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.id)) {
        this.id = data().deepCopy(fields()[3].schema(), other.id);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.personId)) {
        this.personId = data().deepCopy(fields()[4].schema(), other.personId);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.email)) {
        this.email = data().deepCopy(fields()[5].schema(), other.email);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.alternativeEmail)) {
        this.alternativeEmail = data().deepCopy(fields()[6].schema(), other.alternativeEmail);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.addresses)) {
        this.addresses = data().deepCopy(fields()[7].schema(), other.addresses);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.phones)) {
        this.phones = data().deepCopy(fields()[8].schema(), other.phones);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.audit)) {
        this.audit = data().deepCopy(fields()[9].schema(), other.audit);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (other.hasAuditBuilder()) {
        this.auditBuilder = ps.customer.event.avro.Audit.newBuilder(other.getAuditBuilder());
      }
      if (isValidValue(fields()[10], other.business)) {
        this.business = data().deepCopy(fields()[10].schema(), other.business);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (other.hasBusinessBuilder()) {
        this.businessBuilder = ps.customer.event.avro.Business.newBuilder(other.getBusinessBuilder());
      }
      if (isValidValue(fields()[11], other.securityPhrase)) {
        this.securityPhrase = data().deepCopy(fields()[11].schema(), other.securityPhrase);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.document)) {
        this.document = data().deepCopy(fields()[12].schema(), other.document);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.metadata)) {
        this.metadata = data().deepCopy(fields()[13].schema(), other.metadata);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.options)) {
        this.options = data().deepCopy(fields()[14].schema(), other.options);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (other.hasOptionsBuilder()) {
        this.optionsBuilder = ps.customer.event.avro.Options.newBuilder(other.getOptionsBuilder());
      }
      if (isValidValue(fields()[15], other.showAddress)) {
        this.showAddress = data().deepCopy(fields()[15].schema(), other.showAddress);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.registrationDate)) {
        this.registrationDate = data().deepCopy(fields()[16].schema(), other.registrationDate);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.status)) {
        this.status = data().deepCopy(fields()[17].schema(), other.status);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.eventDate)) {
        this.eventDate = data().deepCopy(fields()[18].schema(), other.eventDate);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
    }

    /**
     * Creates a Builder by copying an existing CustomerEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(ps.customer.event.avro.CustomerEvent other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.individualEvent)) {
        this.individualEvent = data().deepCopy(fields()[0].schema(), other.individualEvent);
        fieldSetFlags()[0] = true;
      }
      this.individualEventBuilder = null;
      if (isValidValue(fields()[1], other.legalEntityEvent)) {
        this.legalEntityEvent = data().deepCopy(fields()[1].schema(), other.legalEntityEvent);
        fieldSetFlags()[1] = true;
      }
      this.legalEntityEventBuilder = null;
      if (isValidValue(fields()[2], other.customerType)) {
        this.customerType = data().deepCopy(fields()[2].schema(), other.customerType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.id)) {
        this.id = data().deepCopy(fields()[3].schema(), other.id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.personId)) {
        this.personId = data().deepCopy(fields()[4].schema(), other.personId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.email)) {
        this.email = data().deepCopy(fields()[5].schema(), other.email);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.alternativeEmail)) {
        this.alternativeEmail = data().deepCopy(fields()[6].schema(), other.alternativeEmail);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.addresses)) {
        this.addresses = data().deepCopy(fields()[7].schema(), other.addresses);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.phones)) {
        this.phones = data().deepCopy(fields()[8].schema(), other.phones);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.audit)) {
        this.audit = data().deepCopy(fields()[9].schema(), other.audit);
        fieldSetFlags()[9] = true;
      }
      this.auditBuilder = null;
      if (isValidValue(fields()[10], other.business)) {
        this.business = data().deepCopy(fields()[10].schema(), other.business);
        fieldSetFlags()[10] = true;
      }
      this.businessBuilder = null;
      if (isValidValue(fields()[11], other.securityPhrase)) {
        this.securityPhrase = data().deepCopy(fields()[11].schema(), other.securityPhrase);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.document)) {
        this.document = data().deepCopy(fields()[12].schema(), other.document);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.metadata)) {
        this.metadata = data().deepCopy(fields()[13].schema(), other.metadata);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.options)) {
        this.options = data().deepCopy(fields()[14].schema(), other.options);
        fieldSetFlags()[14] = true;
      }
      this.optionsBuilder = null;
      if (isValidValue(fields()[15], other.showAddress)) {
        this.showAddress = data().deepCopy(fields()[15].schema(), other.showAddress);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.registrationDate)) {
        this.registrationDate = data().deepCopy(fields()[16].schema(), other.registrationDate);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.status)) {
        this.status = data().deepCopy(fields()[17].schema(), other.status);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.eventDate)) {
        this.eventDate = data().deepCopy(fields()[18].schema(), other.eventDate);
        fieldSetFlags()[18] = true;
      }
    }

    /**
      * Gets the value of the 'individualEvent' field.
      * @return The value.
      */
    public ps.customer.event.avro.IndividualEvent getIndividualEvent() {
      return individualEvent;
    }


    /**
      * Sets the value of the 'individualEvent' field.
      * @param value The value of 'individualEvent'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setIndividualEvent(ps.customer.event.avro.IndividualEvent value) {
      validate(fields()[0], value);
      this.individualEventBuilder = null;
      this.individualEvent = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'individualEvent' field has been set.
      * @return True if the 'individualEvent' field has been set, false otherwise.
      */
    public boolean hasIndividualEvent() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'individualEvent' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ps.customer.event.avro.IndividualEvent.Builder getIndividualEventBuilder() {
      if (individualEventBuilder == null) {
        if (hasIndividualEvent()) {
          setIndividualEventBuilder(ps.customer.event.avro.IndividualEvent.newBuilder(individualEvent));
        } else {
          setIndividualEventBuilder(ps.customer.event.avro.IndividualEvent.newBuilder());
        }
      }
      return individualEventBuilder;
    }

    /**
     * Sets the Builder instance for the 'individualEvent' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public ps.customer.event.avro.CustomerEvent.Builder setIndividualEventBuilder(ps.customer.event.avro.IndividualEvent.Builder value) {
      clearIndividualEvent();
      individualEventBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'individualEvent' field has an active Builder instance
     * @return True if the 'individualEvent' field has an active Builder instance
     */
    public boolean hasIndividualEventBuilder() {
      return individualEventBuilder != null;
    }

    /**
      * Clears the value of the 'individualEvent' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearIndividualEvent() {
      individualEvent = null;
      individualEventBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'legalEntityEvent' field.
      * @return The value.
      */
    public ps.customer.event.avro.LegalEntityEvent getLegalEntityEvent() {
      return legalEntityEvent;
    }


    /**
      * Sets the value of the 'legalEntityEvent' field.
      * @param value The value of 'legalEntityEvent'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setLegalEntityEvent(ps.customer.event.avro.LegalEntityEvent value) {
      validate(fields()[1], value);
      this.legalEntityEventBuilder = null;
      this.legalEntityEvent = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'legalEntityEvent' field has been set.
      * @return True if the 'legalEntityEvent' field has been set, false otherwise.
      */
    public boolean hasLegalEntityEvent() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'legalEntityEvent' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ps.customer.event.avro.LegalEntityEvent.Builder getLegalEntityEventBuilder() {
      if (legalEntityEventBuilder == null) {
        if (hasLegalEntityEvent()) {
          setLegalEntityEventBuilder(ps.customer.event.avro.LegalEntityEvent.newBuilder(legalEntityEvent));
        } else {
          setLegalEntityEventBuilder(ps.customer.event.avro.LegalEntityEvent.newBuilder());
        }
      }
      return legalEntityEventBuilder;
    }

    /**
     * Sets the Builder instance for the 'legalEntityEvent' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public ps.customer.event.avro.CustomerEvent.Builder setLegalEntityEventBuilder(ps.customer.event.avro.LegalEntityEvent.Builder value) {
      clearLegalEntityEvent();
      legalEntityEventBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'legalEntityEvent' field has an active Builder instance
     * @return True if the 'legalEntityEvent' field has an active Builder instance
     */
    public boolean hasLegalEntityEventBuilder() {
      return legalEntityEventBuilder != null;
    }

    /**
      * Clears the value of the 'legalEntityEvent' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearLegalEntityEvent() {
      legalEntityEvent = null;
      legalEntityEventBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerType' field.
      * @return The value.
      */
    public ps.customer.event.avro.CustomerType getCustomerType() {
      return customerType;
    }


    /**
      * Sets the value of the 'customerType' field.
      * @param value The value of 'customerType'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setCustomerType(ps.customer.event.avro.CustomerType value) {
      validate(fields()[2], value);
      this.customerType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'customerType' field has been set.
      * @return True if the 'customerType' field has been set, false otherwise.
      */
    public boolean hasCustomerType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'customerType' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearCustomerType() {
      customerType = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.id = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearId() {
      id = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'personId' field.
      * @return The value.
      */
    public java.lang.CharSequence getPersonId() {
      return personId;
    }


    /**
      * Sets the value of the 'personId' field.
      * @param value The value of 'personId'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setPersonId(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.personId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'personId' field has been set.
      * @return True if the 'personId' field has been set, false otherwise.
      */
    public boolean hasPersonId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'personId' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearPersonId() {
      personId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmail() {
      return email;
    }


    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setEmail(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.email = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearEmail() {
      email = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'alternativeEmail' field.
      * @return The value.
      */
    public java.lang.CharSequence getAlternativeEmail() {
      return alternativeEmail;
    }


    /**
      * Sets the value of the 'alternativeEmail' field.
      * @param value The value of 'alternativeEmail'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setAlternativeEmail(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.alternativeEmail = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'alternativeEmail' field has been set.
      * @return True if the 'alternativeEmail' field has been set, false otherwise.
      */
    public boolean hasAlternativeEmail() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'alternativeEmail' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearAlternativeEmail() {
      alternativeEmail = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'addresses' field.
      * @return The value.
      */
    public java.util.List<ps.customer.event.avro.Address> getAddresses() {
      return addresses;
    }


    /**
      * Sets the value of the 'addresses' field.
      * @param value The value of 'addresses'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setAddresses(java.util.List<ps.customer.event.avro.Address> value) {
      validate(fields()[7], value);
      this.addresses = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'addresses' field has been set.
      * @return True if the 'addresses' field has been set, false otherwise.
      */
    public boolean hasAddresses() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'addresses' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearAddresses() {
      addresses = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'phones' field.
      * @return The value.
      */
    public java.util.List<ps.customer.event.avro.Phone> getPhones() {
      return phones;
    }


    /**
      * Sets the value of the 'phones' field.
      * @param value The value of 'phones'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setPhones(java.util.List<ps.customer.event.avro.Phone> value) {
      validate(fields()[8], value);
      this.phones = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'phones' field has been set.
      * @return True if the 'phones' field has been set, false otherwise.
      */
    public boolean hasPhones() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'phones' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearPhones() {
      phones = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'audit' field.
      * @return The value.
      */
    public ps.customer.event.avro.Audit getAudit() {
      return audit;
    }


    /**
      * Sets the value of the 'audit' field.
      * @param value The value of 'audit'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setAudit(ps.customer.event.avro.Audit value) {
      validate(fields()[9], value);
      this.auditBuilder = null;
      this.audit = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'audit' field has been set.
      * @return True if the 'audit' field has been set, false otherwise.
      */
    public boolean hasAudit() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'audit' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ps.customer.event.avro.Audit.Builder getAuditBuilder() {
      if (auditBuilder == null) {
        if (hasAudit()) {
          setAuditBuilder(ps.customer.event.avro.Audit.newBuilder(audit));
        } else {
          setAuditBuilder(ps.customer.event.avro.Audit.newBuilder());
        }
      }
      return auditBuilder;
    }

    /**
     * Sets the Builder instance for the 'audit' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public ps.customer.event.avro.CustomerEvent.Builder setAuditBuilder(ps.customer.event.avro.Audit.Builder value) {
      clearAudit();
      auditBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'audit' field has an active Builder instance
     * @return True if the 'audit' field has an active Builder instance
     */
    public boolean hasAuditBuilder() {
      return auditBuilder != null;
    }

    /**
      * Clears the value of the 'audit' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearAudit() {
      audit = null;
      auditBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'business' field.
      * @return The value.
      */
    public ps.customer.event.avro.Business getBusiness() {
      return business;
    }


    /**
      * Sets the value of the 'business' field.
      * @param value The value of 'business'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setBusiness(ps.customer.event.avro.Business value) {
      validate(fields()[10], value);
      this.businessBuilder = null;
      this.business = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'business' field has been set.
      * @return True if the 'business' field has been set, false otherwise.
      */
    public boolean hasBusiness() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'business' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ps.customer.event.avro.Business.Builder getBusinessBuilder() {
      if (businessBuilder == null) {
        if (hasBusiness()) {
          setBusinessBuilder(ps.customer.event.avro.Business.newBuilder(business));
        } else {
          setBusinessBuilder(ps.customer.event.avro.Business.newBuilder());
        }
      }
      return businessBuilder;
    }

    /**
     * Sets the Builder instance for the 'business' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public ps.customer.event.avro.CustomerEvent.Builder setBusinessBuilder(ps.customer.event.avro.Business.Builder value) {
      clearBusiness();
      businessBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'business' field has an active Builder instance
     * @return True if the 'business' field has an active Builder instance
     */
    public boolean hasBusinessBuilder() {
      return businessBuilder != null;
    }

    /**
      * Clears the value of the 'business' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearBusiness() {
      business = null;
      businessBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'securityPhrase' field.
      * @return The value.
      */
    public java.lang.CharSequence getSecurityPhrase() {
      return securityPhrase;
    }


    /**
      * Sets the value of the 'securityPhrase' field.
      * @param value The value of 'securityPhrase'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setSecurityPhrase(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.securityPhrase = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'securityPhrase' field has been set.
      * @return True if the 'securityPhrase' field has been set, false otherwise.
      */
    public boolean hasSecurityPhrase() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'securityPhrase' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearSecurityPhrase() {
      securityPhrase = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'document' field.
      * @return The value.
      */
    public java.lang.CharSequence getDocument() {
      return document;
    }


    /**
      * Sets the value of the 'document' field.
      * @param value The value of 'document'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setDocument(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.document = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'document' field has been set.
      * @return True if the 'document' field has been set, false otherwise.
      */
    public boolean hasDocument() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'document' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearDocument() {
      document = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'metadata' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getMetadata() {
      return metadata;
    }


    /**
      * Sets the value of the 'metadata' field.
      * @param value The value of 'metadata'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setMetadata(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[13], value);
      this.metadata = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'metadata' field has been set.
      * @return True if the 'metadata' field has been set, false otherwise.
      */
    public boolean hasMetadata() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'metadata' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearMetadata() {
      metadata = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'options' field.
      * @return The value.
      */
    public ps.customer.event.avro.Options getOptions() {
      return options;
    }


    /**
      * Sets the value of the 'options' field.
      * @param value The value of 'options'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setOptions(ps.customer.event.avro.Options value) {
      validate(fields()[14], value);
      this.optionsBuilder = null;
      this.options = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'options' field has been set.
      * @return True if the 'options' field has been set, false otherwise.
      */
    public boolean hasOptions() {
      return fieldSetFlags()[14];
    }

    /**
     * Gets the Builder instance for the 'options' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ps.customer.event.avro.Options.Builder getOptionsBuilder() {
      if (optionsBuilder == null) {
        if (hasOptions()) {
          setOptionsBuilder(ps.customer.event.avro.Options.newBuilder(options));
        } else {
          setOptionsBuilder(ps.customer.event.avro.Options.newBuilder());
        }
      }
      return optionsBuilder;
    }

    /**
     * Sets the Builder instance for the 'options' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public ps.customer.event.avro.CustomerEvent.Builder setOptionsBuilder(ps.customer.event.avro.Options.Builder value) {
      clearOptions();
      optionsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'options' field has an active Builder instance
     * @return True if the 'options' field has an active Builder instance
     */
    public boolean hasOptionsBuilder() {
      return optionsBuilder != null;
    }

    /**
      * Clears the value of the 'options' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearOptions() {
      options = null;
      optionsBuilder = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'showAddress' field.
      * @return The value.
      */
    public boolean getShowAddress() {
      return showAddress;
    }


    /**
      * Sets the value of the 'showAddress' field.
      * @param value The value of 'showAddress'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setShowAddress(boolean value) {
      validate(fields()[15], value);
      this.showAddress = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'showAddress' field has been set.
      * @return True if the 'showAddress' field has been set, false otherwise.
      */
    public boolean hasShowAddress() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'showAddress' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearShowAddress() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'registrationDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getRegistrationDate() {
      return registrationDate;
    }


    /**
      * Sets the value of the 'registrationDate' field.
      * @param value The value of 'registrationDate'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setRegistrationDate(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.registrationDate = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'registrationDate' field has been set.
      * @return True if the 'registrationDate' field has been set, false otherwise.
      */
    public boolean hasRegistrationDate() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'registrationDate' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearRegistrationDate() {
      registrationDate = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.CharSequence getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setStatus(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.status = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearStatus() {
      status = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventDate() {
      return eventDate;
    }


    /**
      * Sets the value of the 'eventDate' field.
      * @param value The value of 'eventDate'.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder setEventDate(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.eventDate = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'eventDate' field has been set.
      * @return True if the 'eventDate' field has been set, false otherwise.
      */
    public boolean hasEventDate() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'eventDate' field.
      * @return This builder.
      */
    public ps.customer.event.avro.CustomerEvent.Builder clearEventDate() {
      eventDate = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CustomerEvent build() {
      try {
        CustomerEvent record = new CustomerEvent();
        if (individualEventBuilder != null) {
          try {
            record.individualEvent = this.individualEventBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("individualEvent"));
            throw e;
          }
        } else {
          record.individualEvent = fieldSetFlags()[0] ? this.individualEvent : (ps.customer.event.avro.IndividualEvent) defaultValue(fields()[0]);
        }
        if (legalEntityEventBuilder != null) {
          try {
            record.legalEntityEvent = this.legalEntityEventBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("legalEntityEvent"));
            throw e;
          }
        } else {
          record.legalEntityEvent = fieldSetFlags()[1] ? this.legalEntityEvent : (ps.customer.event.avro.LegalEntityEvent) defaultValue(fields()[1]);
        }
        record.customerType = fieldSetFlags()[2] ? this.customerType : (ps.customer.event.avro.CustomerType) defaultValue(fields()[2]);
        record.id = fieldSetFlags()[3] ? this.id : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.personId = fieldSetFlags()[4] ? this.personId : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.email = fieldSetFlags()[5] ? this.email : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.alternativeEmail = fieldSetFlags()[6] ? this.alternativeEmail : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.addresses = fieldSetFlags()[7] ? this.addresses : (java.util.List<ps.customer.event.avro.Address>) defaultValue(fields()[7]);
        record.phones = fieldSetFlags()[8] ? this.phones : (java.util.List<ps.customer.event.avro.Phone>) defaultValue(fields()[8]);
        if (auditBuilder != null) {
          try {
            record.audit = this.auditBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("audit"));
            throw e;
          }
        } else {
          record.audit = fieldSetFlags()[9] ? this.audit : (ps.customer.event.avro.Audit) defaultValue(fields()[9]);
        }
        if (businessBuilder != null) {
          try {
            record.business = this.businessBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("business"));
            throw e;
          }
        } else {
          record.business = fieldSetFlags()[10] ? this.business : (ps.customer.event.avro.Business) defaultValue(fields()[10]);
        }
        record.securityPhrase = fieldSetFlags()[11] ? this.securityPhrase : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.document = fieldSetFlags()[12] ? this.document : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.metadata = fieldSetFlags()[13] ? this.metadata : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[13]);
        if (optionsBuilder != null) {
          try {
            record.options = this.optionsBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("options"));
            throw e;
          }
        } else {
          record.options = fieldSetFlags()[14] ? this.options : (ps.customer.event.avro.Options) defaultValue(fields()[14]);
        }
        record.showAddress = fieldSetFlags()[15] ? this.showAddress : (java.lang.Boolean) defaultValue(fields()[15]);
        record.registrationDate = fieldSetFlags()[16] ? this.registrationDate : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.status = fieldSetFlags()[17] ? this.status : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.eventDate = fieldSetFlags()[18] ? this.eventDate : (java.lang.CharSequence) defaultValue(fields()[18]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CustomerEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<CustomerEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CustomerEvent>
    READER$ = (org.apache.avro.io.DatumReader<CustomerEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.individualEvent == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.individualEvent.customEncode(out);
    }

    if (this.legalEntityEvent == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.legalEntityEvent.customEncode(out);
    }

    if (this.customerType == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeEnum(this.customerType.ordinal());
    }

    out.writeString(this.id);

    if (this.personId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.personId);
    }

    if (this.email == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.email);
    }

    if (this.alternativeEmail == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.alternativeEmail);
    }

    if (this.addresses == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.addresses.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (ps.customer.event.avro.Address e0: this.addresses) {
        actualSize0++;
        out.startItem();
        e0.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.phones == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size1 = this.phones.size();
      out.writeArrayStart();
      out.setItemCount(size1);
      long actualSize1 = 0;
      for (ps.customer.event.avro.Phone e1: this.phones) {
        actualSize1++;
        out.startItem();
        e1.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize1 != size1)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");
    }

    if (this.audit == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.audit.customEncode(out);
    }

    if (this.business == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.business.customEncode(out);
    }

    if (this.securityPhrase == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.securityPhrase);
    }

    if (this.document == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.document);
    }

    if (this.metadata == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size2 = this.metadata.size();
      out.writeMapStart();
      out.setItemCount(size2);
      long actualSize2 = 0;
      for (java.util.Map.Entry<java.lang.CharSequence, java.lang.CharSequence> e2: this.metadata.entrySet()) {
        actualSize2++;
        out.startItem();
        out.writeString(e2.getKey());
        java.lang.CharSequence v2 = e2.getValue();
        if (v2 == null) {
          out.writeIndex(0);
          out.writeNull();
        } else {
          out.writeIndex(1);
          out.writeString(v2);
        }
      }
      out.writeMapEnd();
      if (actualSize2 != size2)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size2 + ", but element count was " + actualSize2 + ".");
    }

    if (this.options == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.options.customEncode(out);
    }

    out.writeBoolean(this.showAddress);

    if (this.registrationDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.registrationDate);
    }

    if (this.status == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.status);
    }

    if (this.eventDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.eventDate);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.individualEvent = null;
      } else {
        if (this.individualEvent == null) {
          this.individualEvent = new ps.customer.event.avro.IndividualEvent();
        }
        this.individualEvent.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.legalEntityEvent = null;
      } else {
        if (this.legalEntityEvent == null) {
          this.legalEntityEvent = new ps.customer.event.avro.LegalEntityEvent();
        }
        this.legalEntityEvent.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.customerType = null;
      } else {
        this.customerType = ps.customer.event.avro.CustomerType.values()[in.readEnum()];
      }

      this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.personId = null;
      } else {
        this.personId = in.readString(this.personId instanceof Utf8 ? (Utf8)this.personId : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.email = null;
      } else {
        this.email = in.readString(this.email instanceof Utf8 ? (Utf8)this.email : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.alternativeEmail = null;
      } else {
        this.alternativeEmail = in.readString(this.alternativeEmail instanceof Utf8 ? (Utf8)this.alternativeEmail : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.addresses = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<ps.customer.event.avro.Address> a0 = this.addresses;
        if (a0 == null) {
          a0 = new SpecificData.Array<ps.customer.event.avro.Address>((int)size0, SCHEMA$.getField("addresses").schema().getTypes().get(1));
          this.addresses = a0;
        } else a0.clear();
        SpecificData.Array<ps.customer.event.avro.Address> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<ps.customer.event.avro.Address>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            ps.customer.event.avro.Address e0 = (ga0 != null ? ga0.peek() : null);
            if (e0 == null) {
              e0 = new ps.customer.event.avro.Address();
            }
            e0.customDecode(in);
            a0.add(e0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.phones = null;
      } else {
        long size1 = in.readArrayStart();
        java.util.List<ps.customer.event.avro.Phone> a1 = this.phones;
        if (a1 == null) {
          a1 = new SpecificData.Array<ps.customer.event.avro.Phone>((int)size1, SCHEMA$.getField("phones").schema().getTypes().get(1));
          this.phones = a1;
        } else a1.clear();
        SpecificData.Array<ps.customer.event.avro.Phone> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<ps.customer.event.avro.Phone>)a1 : null);
        for ( ; 0 < size1; size1 = in.arrayNext()) {
          for ( ; size1 != 0; size1--) {
            ps.customer.event.avro.Phone e1 = (ga1 != null ? ga1.peek() : null);
            if (e1 == null) {
              e1 = new ps.customer.event.avro.Phone();
            }
            e1.customDecode(in);
            a1.add(e1);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.audit = null;
      } else {
        if (this.audit == null) {
          this.audit = new ps.customer.event.avro.Audit();
        }
        this.audit.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.business = null;
      } else {
        if (this.business == null) {
          this.business = new ps.customer.event.avro.Business();
        }
        this.business.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.securityPhrase = null;
      } else {
        this.securityPhrase = in.readString(this.securityPhrase instanceof Utf8 ? (Utf8)this.securityPhrase : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.document = null;
      } else {
        this.document = in.readString(this.document instanceof Utf8 ? (Utf8)this.document : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.metadata = null;
      } else {
        long size2 = in.readMapStart();
        java.util.Map<java.lang.CharSequence,java.lang.CharSequence> m2 = this.metadata; // Need fresh name due to limitation of macro system
        if (m2 == null) {
          m2 = new java.util.HashMap<java.lang.CharSequence,java.lang.CharSequence>((int)(size2 * 4)/3 + 1);
          this.metadata = m2;
        } else m2.clear();
        for ( ; 0 < size2; size2 = in.mapNext()) {
          for ( ; size2 != 0; size2--) {
            java.lang.CharSequence k2 = null;
            k2 = in.readString(k2 instanceof Utf8 ? (Utf8)k2 : null);
            java.lang.CharSequence v2 = null;
            if (in.readIndex() != 1) {
              in.readNull();
              v2 = null;
            } else {
              v2 = in.readString(v2 instanceof Utf8 ? (Utf8)v2 : null);
            }
            m2.put(k2, v2);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.options = null;
      } else {
        if (this.options == null) {
          this.options = new ps.customer.event.avro.Options();
        }
        this.options.customDecode(in);
      }

      this.showAddress = in.readBoolean();

      if (in.readIndex() != 1) {
        in.readNull();
        this.registrationDate = null;
      } else {
        this.registrationDate = in.readString(this.registrationDate instanceof Utf8 ? (Utf8)this.registrationDate : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.status = null;
      } else {
        this.status = in.readString(this.status instanceof Utf8 ? (Utf8)this.status : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.eventDate = null;
      } else {
        this.eventDate = in.readString(this.eventDate instanceof Utf8 ? (Utf8)this.eventDate : null);
      }

    } else {
      for (int i = 0; i < 19; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.individualEvent = null;
          } else {
            if (this.individualEvent == null) {
              this.individualEvent = new ps.customer.event.avro.IndividualEvent();
            }
            this.individualEvent.customDecode(in);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.legalEntityEvent = null;
          } else {
            if (this.legalEntityEvent == null) {
              this.legalEntityEvent = new ps.customer.event.avro.LegalEntityEvent();
            }
            this.legalEntityEvent.customDecode(in);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.customerType = null;
          } else {
            this.customerType = ps.customer.event.avro.CustomerType.values()[in.readEnum()];
          }
          break;

        case 3:
          this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.personId = null;
          } else {
            this.personId = in.readString(this.personId instanceof Utf8 ? (Utf8)this.personId : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.email = null;
          } else {
            this.email = in.readString(this.email instanceof Utf8 ? (Utf8)this.email : null);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.alternativeEmail = null;
          } else {
            this.alternativeEmail = in.readString(this.alternativeEmail instanceof Utf8 ? (Utf8)this.alternativeEmail : null);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.addresses = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<ps.customer.event.avro.Address> a0 = this.addresses;
            if (a0 == null) {
              a0 = new SpecificData.Array<ps.customer.event.avro.Address>((int)size0, SCHEMA$.getField("addresses").schema().getTypes().get(1));
              this.addresses = a0;
            } else a0.clear();
            SpecificData.Array<ps.customer.event.avro.Address> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<ps.customer.event.avro.Address>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                ps.customer.event.avro.Address e0 = (ga0 != null ? ga0.peek() : null);
                if (e0 == null) {
                  e0 = new ps.customer.event.avro.Address();
                }
                e0.customDecode(in);
                a0.add(e0);
              }
            }
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.phones = null;
          } else {
            long size1 = in.readArrayStart();
            java.util.List<ps.customer.event.avro.Phone> a1 = this.phones;
            if (a1 == null) {
              a1 = new SpecificData.Array<ps.customer.event.avro.Phone>((int)size1, SCHEMA$.getField("phones").schema().getTypes().get(1));
              this.phones = a1;
            } else a1.clear();
            SpecificData.Array<ps.customer.event.avro.Phone> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<ps.customer.event.avro.Phone>)a1 : null);
            for ( ; 0 < size1; size1 = in.arrayNext()) {
              for ( ; size1 != 0; size1--) {
                ps.customer.event.avro.Phone e1 = (ga1 != null ? ga1.peek() : null);
                if (e1 == null) {
                  e1 = new ps.customer.event.avro.Phone();
                }
                e1.customDecode(in);
                a1.add(e1);
              }
            }
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.audit = null;
          } else {
            if (this.audit == null) {
              this.audit = new ps.customer.event.avro.Audit();
            }
            this.audit.customDecode(in);
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.business = null;
          } else {
            if (this.business == null) {
              this.business = new ps.customer.event.avro.Business();
            }
            this.business.customDecode(in);
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.securityPhrase = null;
          } else {
            this.securityPhrase = in.readString(this.securityPhrase instanceof Utf8 ? (Utf8)this.securityPhrase : null);
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.document = null;
          } else {
            this.document = in.readString(this.document instanceof Utf8 ? (Utf8)this.document : null);
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.metadata = null;
          } else {
            long size2 = in.readMapStart();
            java.util.Map<java.lang.CharSequence,java.lang.CharSequence> m2 = this.metadata; // Need fresh name due to limitation of macro system
            if (m2 == null) {
              m2 = new java.util.HashMap<java.lang.CharSequence,java.lang.CharSequence>((int)(size2 * 4)/3 + 1);
              this.metadata = m2;
            } else m2.clear();
            for ( ; 0 < size2; size2 = in.mapNext()) {
              for ( ; size2 != 0; size2--) {
                java.lang.CharSequence k2 = null;
                k2 = in.readString(k2 instanceof Utf8 ? (Utf8)k2 : null);
                java.lang.CharSequence v2 = null;
                if (in.readIndex() != 1) {
                  in.readNull();
                  v2 = null;
                } else {
                  v2 = in.readString(v2 instanceof Utf8 ? (Utf8)v2 : null);
                }
                m2.put(k2, v2);
              }
            }
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.options = null;
          } else {
            if (this.options == null) {
              this.options = new ps.customer.event.avro.Options();
            }
            this.options.customDecode(in);
          }
          break;

        case 15:
          this.showAddress = in.readBoolean();
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.registrationDate = null;
          } else {
            this.registrationDate = in.readString(this.registrationDate instanceof Utf8 ? (Utf8)this.registrationDate : null);
          }
          break;

        case 17:
          if (in.readIndex() != 1) {
            in.readNull();
            this.status = null;
          } else {
            this.status = in.readString(this.status instanceof Utf8 ? (Utf8)this.status : null);
          }
          break;

        case 18:
          if (in.readIndex() != 1) {
            in.readNull();
            this.eventDate = null;
          } else {
            this.eventDate = in.readString(this.eventDate instanceof Utf8 ? (Utf8)this.eventDate : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










